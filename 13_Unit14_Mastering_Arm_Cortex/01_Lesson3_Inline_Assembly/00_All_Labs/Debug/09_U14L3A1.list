
09_U14L3A1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000f84  08000130  08000130  00001130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000000c  080010b4  080010b4  000020b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080010c0  080010c0  000020c8  2**0
                  CONTENTS
  4 .ARM          00000000  080010c0  080010c0  000020c8  2**0
                  CONTENTS
  5 .preinit_array 00000000  080010c0  080010c8  000020c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080010c0  080010c0  000020c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080010c4  080010c4  000020c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  000020c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000005c  20000000  080010c8  00003000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000005c  080010c8  0000305c  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000020c8  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000236f  00000000  00000000  000020f1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000705  00000000  00000000  00004460  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_loc    00000d7c  00000000  00000000  00004b65  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000001f8  00000000  00000000  000058e8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 000001c0  00000000  00000000  00005ae0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00001b75  00000000  00000000  00005ca0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00002ce2  00000000  00000000  00007815  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00007b58  00000000  00000000  0000a4f7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  0001204f  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000006b8  00000000  00000000  00012094  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	@ (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	@ (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	@ (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000000 	.word	0x20000000
 800014c:	00000000 	.word	0x00000000
 8000150:	0800109c 	.word	0x0800109c

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	@ (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	@ (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	@ (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000004 	.word	0x20000004
 800016c:	0800109c 	.word	0x0800109c

08000170 <MEXTI_uddtUpdate>:
						(REG == GPIOD)?3:0)

static void(*GP_IRQ_Callback[15])(void);

COMMON_uddtApiState_t  MEXTI_uddtUpdate(MEXTI_uddtCfg_t *EXTIx)
{
 8000170:	b580      	push	{r7, lr}
 8000172:	b086      	sub	sp, #24
 8000174:	af00      	add	r7, sp, #0
 8000176:	6078      	str	r0, [r7, #4]
	COMMON_uddtApiState_t ret = UAPI_NOK;
 8000178:	2300      	movs	r3, #0
 800017a:	75fb      	strb	r3, [r7, #23]
	if(EXTIx != NULL_PTR)
 800017c:	687b      	ldr	r3, [r7, #4]
 800017e:	2b00      	cmp	r3, #0
 8000180:	f000 80cf 	beq.w	8000322 <MEXTI_uddtUpdate+0x1b2>
	{
		MGPIO_uddtPinConfig_t ExtiPin;

		ExtiPin.uddtPinMode = MGPIO_INPUT_AF_MODE;
 8000184:	2308      	movs	r3, #8
 8000186:	747b      	strb	r3, [r7, #17]
		ExtiPin.uddtPinNumber = EXTIx->uddtPinData.uddtPinNumber;
 8000188:	687b      	ldr	r3, [r7, #4]
 800018a:	7a1b      	ldrb	r3, [r3, #8]
 800018c:	743b      	strb	r3, [r7, #16]
		ExtiPin.GPIOx = EXTIx->uddtPinData.uddtGpioPort;
 800018e:	687b      	ldr	r3, [r7, #4]
 8000190:	685b      	ldr	r3, [r3, #4]
 8000192:	60fb      	str	r3, [r7, #12]

		ret = MGPIO_uddtInitPin(&ExtiPin);
 8000194:	f107 030c 	add.w	r3, r7, #12
 8000198:	4618      	mov	r0, r3
 800019a:	f000 fab7 	bl	800070c <MGPIO_uddtInitPin>
 800019e:	4603      	mov	r3, r0
 80001a0:	75fb      	strb	r3, [r7, #23]

		if(ret != UAPI_OK) return ret;
 80001a2:	7dfb      	ldrb	r3, [r7, #23]
 80001a4:	2b01      	cmp	r3, #1
 80001a6:	d001      	beq.n	80001ac <MEXTI_uddtUpdate+0x3c>
 80001a8:	7dfb      	ldrb	r3, [r7, #23]
 80001aa:	e0bd      	b.n	8000328 <MEXTI_uddtUpdate+0x1b8>

		uint8 AFIO_EXTICR_index = EXTIx->uddtPinData.uddtLine / 4;
 80001ac:	687b      	ldr	r3, [r7, #4]
 80001ae:	781b      	ldrb	r3, [r3, #0]
 80001b0:	089b      	lsrs	r3, r3, #2
 80001b2:	75bb      	strb	r3, [r7, #22]
		uint8 AFIO_EXTICR_position = (EXTIx->uddtPinData.uddtLine % 4) *4;
 80001b4:	687b      	ldr	r3, [r7, #4]
 80001b6:	781b      	ldrb	r3, [r3, #0]
 80001b8:	f003 0303 	and.w	r3, r3, #3
 80001bc:	b2db      	uxtb	r3, r3
 80001be:	009b      	lsls	r3, r3, #2
 80001c0:	757b      	strb	r3, [r7, #21]
		AFIO->EXTICRx[AFIO_EXTICR_index] &= ~(0xF << AFIO_EXTICR_position);
 80001c2:	4a5b      	ldr	r2, [pc, #364]	@ (8000330 <MEXTI_uddtUpdate+0x1c0>)
 80001c4:	7dbb      	ldrb	r3, [r7, #22]
 80001c6:	3302      	adds	r3, #2
 80001c8:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80001cc:	7d7b      	ldrb	r3, [r7, #21]
 80001ce:	210f      	movs	r1, #15
 80001d0:	fa01 f303 	lsl.w	r3, r1, r3
 80001d4:	43db      	mvns	r3, r3
 80001d6:	4618      	mov	r0, r3
 80001d8:	4955      	ldr	r1, [pc, #340]	@ (8000330 <MEXTI_uddtUpdate+0x1c0>)
 80001da:	7dbb      	ldrb	r3, [r7, #22]
 80001dc:	4002      	ands	r2, r0
 80001de:	3302      	adds	r3, #2
 80001e0:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
		AFIO->EXTICRx[AFIO_EXTICR_index] |= ((AFIO_GPIO_EXTI_MAPPING(EXTIx->uddtPinData.uddtGpioPort) & 0xF) << AFIO_EXTICR_position);
 80001e4:	4a52      	ldr	r2, [pc, #328]	@ (8000330 <MEXTI_uddtUpdate+0x1c0>)
 80001e6:	7dbb      	ldrb	r3, [r7, #22]
 80001e8:	3302      	adds	r3, #2
 80001ea:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80001ee:	687b      	ldr	r3, [r7, #4]
 80001f0:	685b      	ldr	r3, [r3, #4]
 80001f2:	4950      	ldr	r1, [pc, #320]	@ (8000334 <MEXTI_uddtUpdate+0x1c4>)
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d016      	beq.n	8000226 <MEXTI_uddtUpdate+0xb6>
 80001f8:	687b      	ldr	r3, [r7, #4]
 80001fa:	685b      	ldr	r3, [r3, #4]
 80001fc:	494e      	ldr	r1, [pc, #312]	@ (8000338 <MEXTI_uddtUpdate+0x1c8>)
 80001fe:	428b      	cmp	r3, r1
 8000200:	d00f      	beq.n	8000222 <MEXTI_uddtUpdate+0xb2>
 8000202:	687b      	ldr	r3, [r7, #4]
 8000204:	685b      	ldr	r3, [r3, #4]
 8000206:	494d      	ldr	r1, [pc, #308]	@ (800033c <MEXTI_uddtUpdate+0x1cc>)
 8000208:	428b      	cmp	r3, r1
 800020a:	d008      	beq.n	800021e <MEXTI_uddtUpdate+0xae>
 800020c:	687b      	ldr	r3, [r7, #4]
 800020e:	685b      	ldr	r3, [r3, #4]
 8000210:	494b      	ldr	r1, [pc, #300]	@ (8000340 <MEXTI_uddtUpdate+0x1d0>)
 8000212:	428b      	cmp	r3, r1
 8000214:	d101      	bne.n	800021a <MEXTI_uddtUpdate+0xaa>
 8000216:	2303      	movs	r3, #3
 8000218:	e006      	b.n	8000228 <MEXTI_uddtUpdate+0xb8>
 800021a:	2300      	movs	r3, #0
 800021c:	e004      	b.n	8000228 <MEXTI_uddtUpdate+0xb8>
 800021e:	2302      	movs	r3, #2
 8000220:	e002      	b.n	8000228 <MEXTI_uddtUpdate+0xb8>
 8000222:	2301      	movs	r3, #1
 8000224:	e000      	b.n	8000228 <MEXTI_uddtUpdate+0xb8>
 8000226:	2300      	movs	r3, #0
 8000228:	7d79      	ldrb	r1, [r7, #21]
 800022a:	408b      	lsls	r3, r1
 800022c:	4618      	mov	r0, r3
 800022e:	4940      	ldr	r1, [pc, #256]	@ (8000330 <MEXTI_uddtUpdate+0x1c0>)
 8000230:	7dbb      	ldrb	r3, [r7, #22]
 8000232:	4302      	orrs	r2, r0
 8000234:	3302      	adds	r3, #2
 8000236:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

		EXTI->RTSR &=~(1<<EXTIx->uddtPinData.uddtLine);
 800023a:	4b42      	ldr	r3, [pc, #264]	@ (8000344 <MEXTI_uddtUpdate+0x1d4>)
 800023c:	689b      	ldr	r3, [r3, #8]
 800023e:	687a      	ldr	r2, [r7, #4]
 8000240:	7812      	ldrb	r2, [r2, #0]
 8000242:	4611      	mov	r1, r2
 8000244:	2201      	movs	r2, #1
 8000246:	408a      	lsls	r2, r1
 8000248:	43d2      	mvns	r2, r2
 800024a:	4611      	mov	r1, r2
 800024c:	4a3d      	ldr	r2, [pc, #244]	@ (8000344 <MEXTI_uddtUpdate+0x1d4>)
 800024e:	400b      	ands	r3, r1
 8000250:	6093      	str	r3, [r2, #8]
		EXTI->FTSR &=~(1<<EXTIx->uddtPinData.uddtLine);
 8000252:	4b3c      	ldr	r3, [pc, #240]	@ (8000344 <MEXTI_uddtUpdate+0x1d4>)
 8000254:	68db      	ldr	r3, [r3, #12]
 8000256:	687a      	ldr	r2, [r7, #4]
 8000258:	7812      	ldrb	r2, [r2, #0]
 800025a:	4611      	mov	r1, r2
 800025c:	2201      	movs	r2, #1
 800025e:	408a      	lsls	r2, r1
 8000260:	43d2      	mvns	r2, r2
 8000262:	4611      	mov	r1, r2
 8000264:	4a37      	ldr	r2, [pc, #220]	@ (8000344 <MEXTI_uddtUpdate+0x1d4>)
 8000266:	400b      	ands	r3, r1
 8000268:	60d3      	str	r3, [r2, #12]

		if(EXTIx->uddtTriggerControl == MEXTI_TRIGGER_RISING)
 800026a:	687b      	ldr	r3, [r7, #4]
 800026c:	7b1b      	ldrb	r3, [r3, #12]
 800026e:	2b01      	cmp	r3, #1
 8000270:	d10b      	bne.n	800028a <MEXTI_uddtUpdate+0x11a>
		{
			EXTI->RTSR |= (1<<EXTIx->uddtPinData.uddtLine);
 8000272:	4b34      	ldr	r3, [pc, #208]	@ (8000344 <MEXTI_uddtUpdate+0x1d4>)
 8000274:	689b      	ldr	r3, [r3, #8]
 8000276:	687a      	ldr	r2, [r7, #4]
 8000278:	7812      	ldrb	r2, [r2, #0]
 800027a:	4611      	mov	r1, r2
 800027c:	2201      	movs	r2, #1
 800027e:	408a      	lsls	r2, r1
 8000280:	4611      	mov	r1, r2
 8000282:	4a30      	ldr	r2, [pc, #192]	@ (8000344 <MEXTI_uddtUpdate+0x1d4>)
 8000284:	430b      	orrs	r3, r1
 8000286:	6093      	str	r3, [r2, #8]
 8000288:	e02c      	b.n	80002e4 <MEXTI_uddtUpdate+0x174>
		}
		else if(EXTIx->uddtTriggerControl == MEXTI_TRIGGER_FALLING)
 800028a:	687b      	ldr	r3, [r7, #4]
 800028c:	7b1b      	ldrb	r3, [r3, #12]
 800028e:	2b00      	cmp	r3, #0
 8000290:	d10b      	bne.n	80002aa <MEXTI_uddtUpdate+0x13a>
		{
			EXTI->FTSR |= (1<<EXTIx->uddtPinData.uddtLine);
 8000292:	4b2c      	ldr	r3, [pc, #176]	@ (8000344 <MEXTI_uddtUpdate+0x1d4>)
 8000294:	68db      	ldr	r3, [r3, #12]
 8000296:	687a      	ldr	r2, [r7, #4]
 8000298:	7812      	ldrb	r2, [r2, #0]
 800029a:	4611      	mov	r1, r2
 800029c:	2201      	movs	r2, #1
 800029e:	408a      	lsls	r2, r1
 80002a0:	4611      	mov	r1, r2
 80002a2:	4a28      	ldr	r2, [pc, #160]	@ (8000344 <MEXTI_uddtUpdate+0x1d4>)
 80002a4:	430b      	orrs	r3, r1
 80002a6:	60d3      	str	r3, [r2, #12]
 80002a8:	e01c      	b.n	80002e4 <MEXTI_uddtUpdate+0x174>
		}
		else if(EXTIx->uddtTriggerControl == MEXTI_TRIGGER_BOTH)
 80002aa:	687b      	ldr	r3, [r7, #4]
 80002ac:	7b1b      	ldrb	r3, [r3, #12]
 80002ae:	2b02      	cmp	r3, #2
 80002b0:	d116      	bne.n	80002e0 <MEXTI_uddtUpdate+0x170>
		{
			EXTI->RTSR |= (1<<EXTIx->uddtPinData.uddtLine);
 80002b2:	4b24      	ldr	r3, [pc, #144]	@ (8000344 <MEXTI_uddtUpdate+0x1d4>)
 80002b4:	689b      	ldr	r3, [r3, #8]
 80002b6:	687a      	ldr	r2, [r7, #4]
 80002b8:	7812      	ldrb	r2, [r2, #0]
 80002ba:	4611      	mov	r1, r2
 80002bc:	2201      	movs	r2, #1
 80002be:	408a      	lsls	r2, r1
 80002c0:	4611      	mov	r1, r2
 80002c2:	4a20      	ldr	r2, [pc, #128]	@ (8000344 <MEXTI_uddtUpdate+0x1d4>)
 80002c4:	430b      	orrs	r3, r1
 80002c6:	6093      	str	r3, [r2, #8]
			EXTI->FTSR |= (1<<EXTIx->uddtPinData.uddtLine);
 80002c8:	4b1e      	ldr	r3, [pc, #120]	@ (8000344 <MEXTI_uddtUpdate+0x1d4>)
 80002ca:	68db      	ldr	r3, [r3, #12]
 80002cc:	687a      	ldr	r2, [r7, #4]
 80002ce:	7812      	ldrb	r2, [r2, #0]
 80002d0:	4611      	mov	r1, r2
 80002d2:	2201      	movs	r2, #1
 80002d4:	408a      	lsls	r2, r1
 80002d6:	4611      	mov	r1, r2
 80002d8:	4a1a      	ldr	r2, [pc, #104]	@ (8000344 <MEXTI_uddtUpdate+0x1d4>)
 80002da:	430b      	orrs	r3, r1
 80002dc:	60d3      	str	r3, [r2, #12]
 80002de:	e001      	b.n	80002e4 <MEXTI_uddtUpdate+0x174>
		}
		else
		{
			ret = UAPI_INVALID_PARM;
 80002e0:	2304      	movs	r3, #4
 80002e2:	75fb      	strb	r3, [r7, #23]
		}

		GP_IRQ_Callback[EXTIx->uddtPinData.uddtLine] = EXTIx->IRQCallback;
 80002e4:	687b      	ldr	r3, [r7, #4]
 80002e6:	781b      	ldrb	r3, [r3, #0]
 80002e8:	4619      	mov	r1, r3
 80002ea:	687b      	ldr	r3, [r7, #4]
 80002ec:	691b      	ldr	r3, [r3, #16]
 80002ee:	4a16      	ldr	r2, [pc, #88]	@ (8000348 <MEXTI_uddtUpdate+0x1d8>)
 80002f0:	f842 3021 	str.w	r3, [r2, r1, lsl #2]

		if(EXTIx->u8IRQStatus == MEXTI_UNMASKED)
 80002f4:	687b      	ldr	r3, [r7, #4]
 80002f6:	7b5b      	ldrb	r3, [r3, #13]
 80002f8:	2b01      	cmp	r3, #1
 80002fa:	d105      	bne.n	8000308 <MEXTI_uddtUpdate+0x198>
		{
			ret = MEXTI_uddtUnmaskLine(EXTIx);
 80002fc:	6878      	ldr	r0, [r7, #4]
 80002fe:	f000 f861 	bl	80003c4 <MEXTI_uddtUnmaskLine>
 8000302:	4603      	mov	r3, r0
 8000304:	75fb      	strb	r3, [r7, #23]
 8000306:	e00e      	b.n	8000326 <MEXTI_uddtUpdate+0x1b6>
		}
		else if(EXTIx->u8IRQStatus == MEXTI_MASKED)
 8000308:	687b      	ldr	r3, [r7, #4]
 800030a:	7b5b      	ldrb	r3, [r3, #13]
 800030c:	2b00      	cmp	r3, #0
 800030e:	d105      	bne.n	800031c <MEXTI_uddtUpdate+0x1ac>
		{
			ret = MEXTI_uddtMaskLine(EXTIx);
 8000310:	6878      	ldr	r0, [r7, #4]
 8000312:	f000 f831 	bl	8000378 <MEXTI_uddtMaskLine>
 8000316:	4603      	mov	r3, r0
 8000318:	75fb      	strb	r3, [r7, #23]
 800031a:	e004      	b.n	8000326 <MEXTI_uddtUpdate+0x1b6>
		}
		else
		{
			ret = UAPI_INVALID_PARM;
 800031c:	2304      	movs	r3, #4
 800031e:	75fb      	strb	r3, [r7, #23]
 8000320:	e001      	b.n	8000326 <MEXTI_uddtUpdate+0x1b6>
		}
	}
	else
	{
		ret = UAPI_NULL_PTR;
 8000322:	2302      	movs	r3, #2
 8000324:	75fb      	strb	r3, [r7, #23]
	}
	return ret;
 8000326:	7dfb      	ldrb	r3, [r7, #23]
}
 8000328:	4618      	mov	r0, r3
 800032a:	3718      	adds	r7, #24
 800032c:	46bd      	mov	sp, r7
 800032e:	bd80      	pop	{r7, pc}
 8000330:	40010000 	.word	0x40010000
 8000334:	40010800 	.word	0x40010800
 8000338:	40010c00 	.word	0x40010c00
 800033c:	40011000 	.word	0x40011000
 8000340:	40011400 	.word	0x40011400
 8000344:	40010400 	.word	0x40010400
 8000348:	2000001c 	.word	0x2000001c

0800034c <MEXTI_uddtInit>:

COMMON_uddtApiState_t   MEXTI_uddtInit(MEXTI_uddtCfg_t *EXTIx)
{
 800034c:	b580      	push	{r7, lr}
 800034e:	b084      	sub	sp, #16
 8000350:	af00      	add	r7, sp, #0
 8000352:	6078      	str	r0, [r7, #4]
	COMMON_uddtApiState_t ret = UAPI_NOK;
 8000354:	2300      	movs	r3, #0
 8000356:	73fb      	strb	r3, [r7, #15]
	if(EXTIx != NULL_PTR)
 8000358:	687b      	ldr	r3, [r7, #4]
 800035a:	2b00      	cmp	r3, #0
 800035c:	d005      	beq.n	800036a <MEXTI_uddtInit+0x1e>
	{
		ret = MEXTI_uddtUpdate(EXTIx);
 800035e:	6878      	ldr	r0, [r7, #4]
 8000360:	f7ff ff06 	bl	8000170 <MEXTI_uddtUpdate>
 8000364:	4603      	mov	r3, r0
 8000366:	73fb      	strb	r3, [r7, #15]
 8000368:	e001      	b.n	800036e <MEXTI_uddtInit+0x22>
	}
	else
	{
		ret = UAPI_NULL_PTR;
 800036a:	2302      	movs	r3, #2
 800036c:	73fb      	strb	r3, [r7, #15]
	}
	return ret;
 800036e:	7bfb      	ldrb	r3, [r7, #15]
}
 8000370:	4618      	mov	r0, r3
 8000372:	3710      	adds	r7, #16
 8000374:	46bd      	mov	sp, r7
 8000376:	bd80      	pop	{r7, pc}

08000378 <MEXTI_uddtMaskLine>:
	}
	return ret;
}

COMMON_uddtApiState_t  MEXTI_uddtMaskLine(MEXTI_uddtCfg_t *EXTIx)
{
 8000378:	b580      	push	{r7, lr}
 800037a:	b084      	sub	sp, #16
 800037c:	af00      	add	r7, sp, #0
 800037e:	6078      	str	r0, [r7, #4]
	COMMON_uddtApiState_t ret = UAPI_NOK;
 8000380:	2300      	movs	r3, #0
 8000382:	73fb      	strb	r3, [r7, #15]
	if(EXTIx != NULL_PTR)
 8000384:	687b      	ldr	r3, [r7, #4]
 8000386:	2b00      	cmp	r3, #0
 8000388:	d013      	beq.n	80003b2 <MEXTI_uddtMaskLine+0x3a>
	{
		EXTI->IMR &= ~(1 << EXTIx->uddtPinData.uddtLine);
 800038a:	4b0d      	ldr	r3, [pc, #52]	@ (80003c0 <MEXTI_uddtMaskLine+0x48>)
 800038c:	681b      	ldr	r3, [r3, #0]
 800038e:	687a      	ldr	r2, [r7, #4]
 8000390:	7812      	ldrb	r2, [r2, #0]
 8000392:	4611      	mov	r1, r2
 8000394:	2201      	movs	r2, #1
 8000396:	408a      	lsls	r2, r1
 8000398:	43d2      	mvns	r2, r2
 800039a:	4611      	mov	r1, r2
 800039c:	4a08      	ldr	r2, [pc, #32]	@ (80003c0 <MEXTI_uddtMaskLine+0x48>)
 800039e:	400b      	ands	r3, r1
 80003a0:	6013      	str	r3, [r2, #0]
		ret = MNVIC_uddtDisableIRQ(EXTIx->uddtPinData.u8IvtIRQNumber);
 80003a2:	687b      	ldr	r3, [r7, #4]
 80003a4:	7a5b      	ldrb	r3, [r3, #9]
 80003a6:	4618      	mov	r0, r3
 80003a8:	f000 faec 	bl	8000984 <MNVIC_uddtDisableIRQ>
 80003ac:	4603      	mov	r3, r0
 80003ae:	73fb      	strb	r3, [r7, #15]
 80003b0:	e001      	b.n	80003b6 <MEXTI_uddtMaskLine+0x3e>
	}
	else
	{
		ret = UAPI_NULL_PTR;
 80003b2:	2302      	movs	r3, #2
 80003b4:	73fb      	strb	r3, [r7, #15]
	}
	return ret;
 80003b6:	7bfb      	ldrb	r3, [r7, #15]
}
 80003b8:	4618      	mov	r0, r3
 80003ba:	3710      	adds	r7, #16
 80003bc:	46bd      	mov	sp, r7
 80003be:	bd80      	pop	{r7, pc}
 80003c0:	40010400 	.word	0x40010400

080003c4 <MEXTI_uddtUnmaskLine>:

COMMON_uddtApiState_t  MEXTI_uddtUnmaskLine(MEXTI_uddtCfg_t *EXTIx)
{
 80003c4:	b580      	push	{r7, lr}
 80003c6:	b084      	sub	sp, #16
 80003c8:	af00      	add	r7, sp, #0
 80003ca:	6078      	str	r0, [r7, #4]
	COMMON_uddtApiState_t ret = UAPI_NOK;
 80003cc:	2300      	movs	r3, #0
 80003ce:	73fb      	strb	r3, [r7, #15]
	if(EXTIx != NULL_PTR)
 80003d0:	687b      	ldr	r3, [r7, #4]
 80003d2:	2b00      	cmp	r3, #0
 80003d4:	d012      	beq.n	80003fc <MEXTI_uddtUnmaskLine+0x38>
	{
		EXTI->IMR |= (1 << EXTIx->uddtPinData.uddtLine);
 80003d6:	4b0d      	ldr	r3, [pc, #52]	@ (800040c <MEXTI_uddtUnmaskLine+0x48>)
 80003d8:	681b      	ldr	r3, [r3, #0]
 80003da:	687a      	ldr	r2, [r7, #4]
 80003dc:	7812      	ldrb	r2, [r2, #0]
 80003de:	4611      	mov	r1, r2
 80003e0:	2201      	movs	r2, #1
 80003e2:	408a      	lsls	r2, r1
 80003e4:	4611      	mov	r1, r2
 80003e6:	4a09      	ldr	r2, [pc, #36]	@ (800040c <MEXTI_uddtUnmaskLine+0x48>)
 80003e8:	430b      	orrs	r3, r1
 80003ea:	6013      	str	r3, [r2, #0]
		ret = MNVIC_uddtEnableIRQ(EXTIx->uddtPinData.u8IvtIRQNumber);
 80003ec:	687b      	ldr	r3, [r7, #4]
 80003ee:	7a5b      	ldrb	r3, [r3, #9]
 80003f0:	4618      	mov	r0, r3
 80003f2:	f000 faa3 	bl	800093c <MNVIC_uddtEnableIRQ>
 80003f6:	4603      	mov	r3, r0
 80003f8:	73fb      	strb	r3, [r7, #15]
 80003fa:	e001      	b.n	8000400 <MEXTI_uddtUnmaskLine+0x3c>
	}
	else
	{
		ret = UAPI_NULL_PTR;
 80003fc:	2302      	movs	r3, #2
 80003fe:	73fb      	strb	r3, [r7, #15]
	}
	return ret;
 8000400:	7bfb      	ldrb	r3, [r7, #15]
}
 8000402:	4618      	mov	r0, r3
 8000404:	3710      	adds	r7, #16
 8000406:	46bd      	mov	sp, r7
 8000408:	bd80      	pop	{r7, pc}
 800040a:	bf00      	nop
 800040c:	40010400 	.word	0x40010400

08000410 <EXTI0_IRQHandler>:
}



void EXTI0_IRQHandler(void)
{
 8000410:	b580      	push	{r7, lr}
 8000412:	af00      	add	r7, sp, #0
	EXTI->PR |= (1<<0);
 8000414:	4b05      	ldr	r3, [pc, #20]	@ (800042c <EXTI0_IRQHandler+0x1c>)
 8000416:	695b      	ldr	r3, [r3, #20]
 8000418:	4a04      	ldr	r2, [pc, #16]	@ (800042c <EXTI0_IRQHandler+0x1c>)
 800041a:	f043 0301 	orr.w	r3, r3, #1
 800041e:	6153      	str	r3, [r2, #20]
	GP_IRQ_Callback[0]();
 8000420:	4b03      	ldr	r3, [pc, #12]	@ (8000430 <EXTI0_IRQHandler+0x20>)
 8000422:	681b      	ldr	r3, [r3, #0]
 8000424:	4798      	blx	r3
}
 8000426:	bf00      	nop
 8000428:	bd80      	pop	{r7, pc}
 800042a:	bf00      	nop
 800042c:	40010400 	.word	0x40010400
 8000430:	2000001c 	.word	0x2000001c

08000434 <EXTI1_IRQHandler>:

void EXTI1_IRQHandler(void)
{
 8000434:	b580      	push	{r7, lr}
 8000436:	af00      	add	r7, sp, #0
	EXTI->PR |= (1<<1);
 8000438:	4b05      	ldr	r3, [pc, #20]	@ (8000450 <EXTI1_IRQHandler+0x1c>)
 800043a:	695b      	ldr	r3, [r3, #20]
 800043c:	4a04      	ldr	r2, [pc, #16]	@ (8000450 <EXTI1_IRQHandler+0x1c>)
 800043e:	f043 0302 	orr.w	r3, r3, #2
 8000442:	6153      	str	r3, [r2, #20]
	GP_IRQ_Callback[1]();
 8000444:	4b03      	ldr	r3, [pc, #12]	@ (8000454 <EXTI1_IRQHandler+0x20>)
 8000446:	685b      	ldr	r3, [r3, #4]
 8000448:	4798      	blx	r3
}
 800044a:	bf00      	nop
 800044c:	bd80      	pop	{r7, pc}
 800044e:	bf00      	nop
 8000450:	40010400 	.word	0x40010400
 8000454:	2000001c 	.word	0x2000001c

08000458 <EXTI2_IRQHandler>:

void EXTI2_IRQHandler(void)
{
 8000458:	b580      	push	{r7, lr}
 800045a:	af00      	add	r7, sp, #0
	EXTI->PR |= (1<<2);
 800045c:	4b05      	ldr	r3, [pc, #20]	@ (8000474 <EXTI2_IRQHandler+0x1c>)
 800045e:	695b      	ldr	r3, [r3, #20]
 8000460:	4a04      	ldr	r2, [pc, #16]	@ (8000474 <EXTI2_IRQHandler+0x1c>)
 8000462:	f043 0304 	orr.w	r3, r3, #4
 8000466:	6153      	str	r3, [r2, #20]
	GP_IRQ_Callback[2]();
 8000468:	4b03      	ldr	r3, [pc, #12]	@ (8000478 <EXTI2_IRQHandler+0x20>)
 800046a:	689b      	ldr	r3, [r3, #8]
 800046c:	4798      	blx	r3
}
 800046e:	bf00      	nop
 8000470:	bd80      	pop	{r7, pc}
 8000472:	bf00      	nop
 8000474:	40010400 	.word	0x40010400
 8000478:	2000001c 	.word	0x2000001c

0800047c <EXTI3_IRQHandler>:

void EXTI3_IRQHandler(void)
{
 800047c:	b580      	push	{r7, lr}
 800047e:	af00      	add	r7, sp, #0
	EXTI->PR |= (1<<3);
 8000480:	4b05      	ldr	r3, [pc, #20]	@ (8000498 <EXTI3_IRQHandler+0x1c>)
 8000482:	695b      	ldr	r3, [r3, #20]
 8000484:	4a04      	ldr	r2, [pc, #16]	@ (8000498 <EXTI3_IRQHandler+0x1c>)
 8000486:	f043 0308 	orr.w	r3, r3, #8
 800048a:	6153      	str	r3, [r2, #20]
	GP_IRQ_Callback[3]();
 800048c:	4b03      	ldr	r3, [pc, #12]	@ (800049c <EXTI3_IRQHandler+0x20>)
 800048e:	68db      	ldr	r3, [r3, #12]
 8000490:	4798      	blx	r3
}
 8000492:	bf00      	nop
 8000494:	bd80      	pop	{r7, pc}
 8000496:	bf00      	nop
 8000498:	40010400 	.word	0x40010400
 800049c:	2000001c 	.word	0x2000001c

080004a0 <EXTI4_IRQHandler>:

void EXTI4_IRQHandler(void)
{
 80004a0:	b580      	push	{r7, lr}
 80004a2:	af00      	add	r7, sp, #0
	EXTI->PR |= (1<<4);
 80004a4:	4b05      	ldr	r3, [pc, #20]	@ (80004bc <EXTI4_IRQHandler+0x1c>)
 80004a6:	695b      	ldr	r3, [r3, #20]
 80004a8:	4a04      	ldr	r2, [pc, #16]	@ (80004bc <EXTI4_IRQHandler+0x1c>)
 80004aa:	f043 0310 	orr.w	r3, r3, #16
 80004ae:	6153      	str	r3, [r2, #20]
	GP_IRQ_Callback[4]();
 80004b0:	4b03      	ldr	r3, [pc, #12]	@ (80004c0 <EXTI4_IRQHandler+0x20>)
 80004b2:	691b      	ldr	r3, [r3, #16]
 80004b4:	4798      	blx	r3
}
 80004b6:	bf00      	nop
 80004b8:	bd80      	pop	{r7, pc}
 80004ba:	bf00      	nop
 80004bc:	40010400 	.word	0x40010400
 80004c0:	2000001c 	.word	0x2000001c

080004c4 <EXTI9_5_IRQHandler>:

void EXTI9_5_IRQHandler(void)
{
 80004c4:	b580      	push	{r7, lr}
 80004c6:	af00      	add	r7, sp, #0
	if(EXTI->PR & (1<<5)){ EXTI->PR |= (1<<5); GP_IRQ_Callback[5](); }
 80004c8:	4b26      	ldr	r3, [pc, #152]	@ (8000564 <EXTI9_5_IRQHandler+0xa0>)
 80004ca:	695b      	ldr	r3, [r3, #20]
 80004cc:	f003 0320 	and.w	r3, r3, #32
 80004d0:	2b00      	cmp	r3, #0
 80004d2:	d008      	beq.n	80004e6 <EXTI9_5_IRQHandler+0x22>
 80004d4:	4b23      	ldr	r3, [pc, #140]	@ (8000564 <EXTI9_5_IRQHandler+0xa0>)
 80004d6:	695b      	ldr	r3, [r3, #20]
 80004d8:	4a22      	ldr	r2, [pc, #136]	@ (8000564 <EXTI9_5_IRQHandler+0xa0>)
 80004da:	f043 0320 	orr.w	r3, r3, #32
 80004de:	6153      	str	r3, [r2, #20]
 80004e0:	4b21      	ldr	r3, [pc, #132]	@ (8000568 <EXTI9_5_IRQHandler+0xa4>)
 80004e2:	695b      	ldr	r3, [r3, #20]
 80004e4:	4798      	blx	r3
	if(EXTI->PR & (1<<6)){ EXTI->PR |= (1<<6); GP_IRQ_Callback[6](); }
 80004e6:	4b1f      	ldr	r3, [pc, #124]	@ (8000564 <EXTI9_5_IRQHandler+0xa0>)
 80004e8:	695b      	ldr	r3, [r3, #20]
 80004ea:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80004ee:	2b00      	cmp	r3, #0
 80004f0:	d008      	beq.n	8000504 <EXTI9_5_IRQHandler+0x40>
 80004f2:	4b1c      	ldr	r3, [pc, #112]	@ (8000564 <EXTI9_5_IRQHandler+0xa0>)
 80004f4:	695b      	ldr	r3, [r3, #20]
 80004f6:	4a1b      	ldr	r2, [pc, #108]	@ (8000564 <EXTI9_5_IRQHandler+0xa0>)
 80004f8:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80004fc:	6153      	str	r3, [r2, #20]
 80004fe:	4b1a      	ldr	r3, [pc, #104]	@ (8000568 <EXTI9_5_IRQHandler+0xa4>)
 8000500:	699b      	ldr	r3, [r3, #24]
 8000502:	4798      	blx	r3
	if(EXTI->PR & (1<<7)){ EXTI->PR |= (1<<7); GP_IRQ_Callback[7](); }
 8000504:	4b17      	ldr	r3, [pc, #92]	@ (8000564 <EXTI9_5_IRQHandler+0xa0>)
 8000506:	695b      	ldr	r3, [r3, #20]
 8000508:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800050c:	2b00      	cmp	r3, #0
 800050e:	d008      	beq.n	8000522 <EXTI9_5_IRQHandler+0x5e>
 8000510:	4b14      	ldr	r3, [pc, #80]	@ (8000564 <EXTI9_5_IRQHandler+0xa0>)
 8000512:	695b      	ldr	r3, [r3, #20]
 8000514:	4a13      	ldr	r2, [pc, #76]	@ (8000564 <EXTI9_5_IRQHandler+0xa0>)
 8000516:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800051a:	6153      	str	r3, [r2, #20]
 800051c:	4b12      	ldr	r3, [pc, #72]	@ (8000568 <EXTI9_5_IRQHandler+0xa4>)
 800051e:	69db      	ldr	r3, [r3, #28]
 8000520:	4798      	blx	r3
	if(EXTI->PR & (1<<8)){ EXTI->PR |= (1<<8); GP_IRQ_Callback[8](); }
 8000522:	4b10      	ldr	r3, [pc, #64]	@ (8000564 <EXTI9_5_IRQHandler+0xa0>)
 8000524:	695b      	ldr	r3, [r3, #20]
 8000526:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800052a:	2b00      	cmp	r3, #0
 800052c:	d008      	beq.n	8000540 <EXTI9_5_IRQHandler+0x7c>
 800052e:	4b0d      	ldr	r3, [pc, #52]	@ (8000564 <EXTI9_5_IRQHandler+0xa0>)
 8000530:	695b      	ldr	r3, [r3, #20]
 8000532:	4a0c      	ldr	r2, [pc, #48]	@ (8000564 <EXTI9_5_IRQHandler+0xa0>)
 8000534:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8000538:	6153      	str	r3, [r2, #20]
 800053a:	4b0b      	ldr	r3, [pc, #44]	@ (8000568 <EXTI9_5_IRQHandler+0xa4>)
 800053c:	6a1b      	ldr	r3, [r3, #32]
 800053e:	4798      	blx	r3
	if(EXTI->PR & (1<<9)){ EXTI->PR |= (1<<9); GP_IRQ_Callback[9](); }
 8000540:	4b08      	ldr	r3, [pc, #32]	@ (8000564 <EXTI9_5_IRQHandler+0xa0>)
 8000542:	695b      	ldr	r3, [r3, #20]
 8000544:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8000548:	2b00      	cmp	r3, #0
 800054a:	d008      	beq.n	800055e <EXTI9_5_IRQHandler+0x9a>
 800054c:	4b05      	ldr	r3, [pc, #20]	@ (8000564 <EXTI9_5_IRQHandler+0xa0>)
 800054e:	695b      	ldr	r3, [r3, #20]
 8000550:	4a04      	ldr	r2, [pc, #16]	@ (8000564 <EXTI9_5_IRQHandler+0xa0>)
 8000552:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8000556:	6153      	str	r3, [r2, #20]
 8000558:	4b03      	ldr	r3, [pc, #12]	@ (8000568 <EXTI9_5_IRQHandler+0xa4>)
 800055a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800055c:	4798      	blx	r3
}
 800055e:	bf00      	nop
 8000560:	bd80      	pop	{r7, pc}
 8000562:	bf00      	nop
 8000564:	40010400 	.word	0x40010400
 8000568:	2000001c 	.word	0x2000001c

0800056c <EXTI15_10_IRQHandler>:

void EXTI15_10_IRQHandler(void)
{
 800056c:	b580      	push	{r7, lr}
 800056e:	af00      	add	r7, sp, #0
	if(EXTI->PR & (1<<10)){ EXTI->PR |= (1<<10); GP_IRQ_Callback[10](); }
 8000570:	4b2d      	ldr	r3, [pc, #180]	@ (8000628 <EXTI15_10_IRQHandler+0xbc>)
 8000572:	695b      	ldr	r3, [r3, #20]
 8000574:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8000578:	2b00      	cmp	r3, #0
 800057a:	d008      	beq.n	800058e <EXTI15_10_IRQHandler+0x22>
 800057c:	4b2a      	ldr	r3, [pc, #168]	@ (8000628 <EXTI15_10_IRQHandler+0xbc>)
 800057e:	695b      	ldr	r3, [r3, #20]
 8000580:	4a29      	ldr	r2, [pc, #164]	@ (8000628 <EXTI15_10_IRQHandler+0xbc>)
 8000582:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8000586:	6153      	str	r3, [r2, #20]
 8000588:	4b28      	ldr	r3, [pc, #160]	@ (800062c <EXTI15_10_IRQHandler+0xc0>)
 800058a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800058c:	4798      	blx	r3
	if(EXTI->PR & (1<<11)){ EXTI->PR |= (1<<11); GP_IRQ_Callback[11](); }
 800058e:	4b26      	ldr	r3, [pc, #152]	@ (8000628 <EXTI15_10_IRQHandler+0xbc>)
 8000590:	695b      	ldr	r3, [r3, #20]
 8000592:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8000596:	2b00      	cmp	r3, #0
 8000598:	d008      	beq.n	80005ac <EXTI15_10_IRQHandler+0x40>
 800059a:	4b23      	ldr	r3, [pc, #140]	@ (8000628 <EXTI15_10_IRQHandler+0xbc>)
 800059c:	695b      	ldr	r3, [r3, #20]
 800059e:	4a22      	ldr	r2, [pc, #136]	@ (8000628 <EXTI15_10_IRQHandler+0xbc>)
 80005a0:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 80005a4:	6153      	str	r3, [r2, #20]
 80005a6:	4b21      	ldr	r3, [pc, #132]	@ (800062c <EXTI15_10_IRQHandler+0xc0>)
 80005a8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80005aa:	4798      	blx	r3
	if(EXTI->PR & (1<<12)){ EXTI->PR |= (1<<12); GP_IRQ_Callback[12](); }
 80005ac:	4b1e      	ldr	r3, [pc, #120]	@ (8000628 <EXTI15_10_IRQHandler+0xbc>)
 80005ae:	695b      	ldr	r3, [r3, #20]
 80005b0:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 80005b4:	2b00      	cmp	r3, #0
 80005b6:	d008      	beq.n	80005ca <EXTI15_10_IRQHandler+0x5e>
 80005b8:	4b1b      	ldr	r3, [pc, #108]	@ (8000628 <EXTI15_10_IRQHandler+0xbc>)
 80005ba:	695b      	ldr	r3, [r3, #20]
 80005bc:	4a1a      	ldr	r2, [pc, #104]	@ (8000628 <EXTI15_10_IRQHandler+0xbc>)
 80005be:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 80005c2:	6153      	str	r3, [r2, #20]
 80005c4:	4b19      	ldr	r3, [pc, #100]	@ (800062c <EXTI15_10_IRQHandler+0xc0>)
 80005c6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80005c8:	4798      	blx	r3
	if(EXTI->PR & (1<<13)){ EXTI->PR |= (1<<13); GP_IRQ_Callback[13](); }
 80005ca:	4b17      	ldr	r3, [pc, #92]	@ (8000628 <EXTI15_10_IRQHandler+0xbc>)
 80005cc:	695b      	ldr	r3, [r3, #20]
 80005ce:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 80005d2:	2b00      	cmp	r3, #0
 80005d4:	d008      	beq.n	80005e8 <EXTI15_10_IRQHandler+0x7c>
 80005d6:	4b14      	ldr	r3, [pc, #80]	@ (8000628 <EXTI15_10_IRQHandler+0xbc>)
 80005d8:	695b      	ldr	r3, [r3, #20]
 80005da:	4a13      	ldr	r2, [pc, #76]	@ (8000628 <EXTI15_10_IRQHandler+0xbc>)
 80005dc:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 80005e0:	6153      	str	r3, [r2, #20]
 80005e2:	4b12      	ldr	r3, [pc, #72]	@ (800062c <EXTI15_10_IRQHandler+0xc0>)
 80005e4:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80005e6:	4798      	blx	r3
	if(EXTI->PR & (1<<14)){ EXTI->PR |= (1<<14); GP_IRQ_Callback[14](); }
 80005e8:	4b0f      	ldr	r3, [pc, #60]	@ (8000628 <EXTI15_10_IRQHandler+0xbc>)
 80005ea:	695b      	ldr	r3, [r3, #20]
 80005ec:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 80005f0:	2b00      	cmp	r3, #0
 80005f2:	d008      	beq.n	8000606 <EXTI15_10_IRQHandler+0x9a>
 80005f4:	4b0c      	ldr	r3, [pc, #48]	@ (8000628 <EXTI15_10_IRQHandler+0xbc>)
 80005f6:	695b      	ldr	r3, [r3, #20]
 80005f8:	4a0b      	ldr	r2, [pc, #44]	@ (8000628 <EXTI15_10_IRQHandler+0xbc>)
 80005fa:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80005fe:	6153      	str	r3, [r2, #20]
 8000600:	4b0a      	ldr	r3, [pc, #40]	@ (800062c <EXTI15_10_IRQHandler+0xc0>)
 8000602:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8000604:	4798      	blx	r3
	if(EXTI->PR & (1<<15)){ EXTI->PR |= (1<<15); GP_IRQ_Callback[15](); }
 8000606:	4b08      	ldr	r3, [pc, #32]	@ (8000628 <EXTI15_10_IRQHandler+0xbc>)
 8000608:	695b      	ldr	r3, [r3, #20]
 800060a:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 800060e:	2b00      	cmp	r3, #0
 8000610:	d008      	beq.n	8000624 <EXTI15_10_IRQHandler+0xb8>
 8000612:	4b05      	ldr	r3, [pc, #20]	@ (8000628 <EXTI15_10_IRQHandler+0xbc>)
 8000614:	695b      	ldr	r3, [r3, #20]
 8000616:	4a04      	ldr	r2, [pc, #16]	@ (8000628 <EXTI15_10_IRQHandler+0xbc>)
 8000618:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800061c:	6153      	str	r3, [r2, #20]
 800061e:	4b03      	ldr	r3, [pc, #12]	@ (800062c <EXTI15_10_IRQHandler+0xc0>)
 8000620:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8000622:	4798      	blx	r3
}
 8000624:	bf00      	nop
 8000626:	bd80      	pop	{r7, pc}
 8000628:	40010400 	.word	0x40010400
 800062c:	2000001c 	.word	0x2000001c

08000630 <Get_CRLH_Position>:
// APIs Supported by "MCAL GPIO DRIVER"
//===============================================


COMMON_uddtApiState_t Get_CRLH_Position(MGPIO_uddtPinNumber_t uddtPinNumber ,uint8 *u8RetOfPosition)
{
 8000630:	b480      	push	{r7}
 8000632:	b085      	sub	sp, #20
 8000634:	af00      	add	r7, sp, #0
 8000636:	4603      	mov	r3, r0
 8000638:	6039      	str	r1, [r7, #0]
 800063a:	71fb      	strb	r3, [r7, #7]
	COMMON_uddtApiState_t ret = UAPI_NOK;
 800063c:	2300      	movs	r3, #0
 800063e:	73fb      	strb	r3, [r7, #15]
	if(u8RetOfPosition != NULL_PTR)
 8000640:	683b      	ldr	r3, [r7, #0]
 8000642:	2b00      	cmp	r3, #0
 8000644:	d059      	beq.n	80006fa <Get_CRLH_Position+0xca>
	{
		switch(uddtPinNumber){
 8000646:	79fb      	ldrb	r3, [r7, #7]
 8000648:	2b0f      	cmp	r3, #15
 800064a:	d853      	bhi.n	80006f4 <Get_CRLH_Position+0xc4>
 800064c:	a201      	add	r2, pc, #4	@ (adr r2, 8000654 <Get_CRLH_Position+0x24>)
 800064e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000652:	bf00      	nop
 8000654:	08000695 	.word	0x08000695
 8000658:	080006a1 	.word	0x080006a1
 800065c:	080006ad 	.word	0x080006ad
 8000660:	080006b9 	.word	0x080006b9
 8000664:	080006c5 	.word	0x080006c5
 8000668:	080006d1 	.word	0x080006d1
 800066c:	080006dd 	.word	0x080006dd
 8000670:	080006e9 	.word	0x080006e9
 8000674:	08000695 	.word	0x08000695
 8000678:	080006a1 	.word	0x080006a1
 800067c:	080006ad 	.word	0x080006ad
 8000680:	080006b9 	.word	0x080006b9
 8000684:	080006c5 	.word	0x080006c5
 8000688:	080006d1 	.word	0x080006d1
 800068c:	080006dd 	.word	0x080006dd
 8000690:	080006e9 	.word	0x080006e9
		case MGPIO_PIN0:
		case MGPIO_PIN8:
			*u8RetOfPosition = 0;
 8000694:	683b      	ldr	r3, [r7, #0]
 8000696:	2200      	movs	r2, #0
 8000698:	701a      	strb	r2, [r3, #0]
			ret = UAPI_OK;
 800069a:	2301      	movs	r3, #1
 800069c:	73fb      	strb	r3, [r7, #15]
			break;
 800069e:	e02e      	b.n	80006fe <Get_CRLH_Position+0xce>
		case MGPIO_PIN1:
		case MGPIO_PIN9:
			*u8RetOfPosition = 4;
 80006a0:	683b      	ldr	r3, [r7, #0]
 80006a2:	2204      	movs	r2, #4
 80006a4:	701a      	strb	r2, [r3, #0]
			ret = UAPI_OK;
 80006a6:	2301      	movs	r3, #1
 80006a8:	73fb      	strb	r3, [r7, #15]
			break;
 80006aa:	e028      	b.n	80006fe <Get_CRLH_Position+0xce>
		case MGPIO_PIN2:
		case MGPIO_PIN10:
			*u8RetOfPosition = 8;
 80006ac:	683b      	ldr	r3, [r7, #0]
 80006ae:	2208      	movs	r2, #8
 80006b0:	701a      	strb	r2, [r3, #0]
			ret = UAPI_OK;
 80006b2:	2301      	movs	r3, #1
 80006b4:	73fb      	strb	r3, [r7, #15]
			break;
 80006b6:	e022      	b.n	80006fe <Get_CRLH_Position+0xce>
		case MGPIO_PIN3:
		case MGPIO_PIN11:
			*u8RetOfPosition = 12;
 80006b8:	683b      	ldr	r3, [r7, #0]
 80006ba:	220c      	movs	r2, #12
 80006bc:	701a      	strb	r2, [r3, #0]
			ret = UAPI_OK;
 80006be:	2301      	movs	r3, #1
 80006c0:	73fb      	strb	r3, [r7, #15]
			break;
 80006c2:	e01c      	b.n	80006fe <Get_CRLH_Position+0xce>
		case MGPIO_PIN4:
		case MGPIO_PIN12:
			*u8RetOfPosition = 16;
 80006c4:	683b      	ldr	r3, [r7, #0]
 80006c6:	2210      	movs	r2, #16
 80006c8:	701a      	strb	r2, [r3, #0]
			ret = UAPI_OK;
 80006ca:	2301      	movs	r3, #1
 80006cc:	73fb      	strb	r3, [r7, #15]
			break;
 80006ce:	e016      	b.n	80006fe <Get_CRLH_Position+0xce>
		case MGPIO_PIN5:
		case MGPIO_PIN13:
			*u8RetOfPosition = 20;
 80006d0:	683b      	ldr	r3, [r7, #0]
 80006d2:	2214      	movs	r2, #20
 80006d4:	701a      	strb	r2, [r3, #0]
			ret = UAPI_OK;
 80006d6:	2301      	movs	r3, #1
 80006d8:	73fb      	strb	r3, [r7, #15]
			break;
 80006da:	e010      	b.n	80006fe <Get_CRLH_Position+0xce>
		case MGPIO_PIN6:
		case MGPIO_PIN14:
			*u8RetOfPosition = 24;
 80006dc:	683b      	ldr	r3, [r7, #0]
 80006de:	2218      	movs	r2, #24
 80006e0:	701a      	strb	r2, [r3, #0]
			ret = UAPI_OK;
 80006e2:	2301      	movs	r3, #1
 80006e4:	73fb      	strb	r3, [r7, #15]
			break;
 80006e6:	e00a      	b.n	80006fe <Get_CRLH_Position+0xce>
		case MGPIO_PIN7:
		case MGPIO_PIN15:
			*u8RetOfPosition = 28;
 80006e8:	683b      	ldr	r3, [r7, #0]
 80006ea:	221c      	movs	r2, #28
 80006ec:	701a      	strb	r2, [r3, #0]
			ret = UAPI_OK;
 80006ee:	2301      	movs	r3, #1
 80006f0:	73fb      	strb	r3, [r7, #15]
			break;
 80006f2:	e004      	b.n	80006fe <Get_CRLH_Position+0xce>
		default: ret = UAPI_INVALID_PARM;
 80006f4:	2304      	movs	r3, #4
 80006f6:	73fb      	strb	r3, [r7, #15]
 80006f8:	e001      	b.n	80006fe <Get_CRLH_Position+0xce>
		}
	}
	else
	{
		ret = UAPI_NULL_PTR;
 80006fa:	2302      	movs	r3, #2
 80006fc:	73fb      	strb	r3, [r7, #15]
	}
	return ret;
 80006fe:	7bfb      	ldrb	r3, [r7, #15]
}
 8000700:	4618      	mov	r0, r3
 8000702:	3714      	adds	r7, #20
 8000704:	46bd      	mov	sp, r7
 8000706:	bc80      	pop	{r7}
 8000708:	4770      	bx	lr
 800070a:	bf00      	nop

0800070c <MGPIO_uddtInitPin>:
 * @Brief         : Initialises a GPIO pin according to the specified configuration.
 * @param [in]    : uddtpinConfig : Pointer to the structure containing pin configurations.
 * @Retval        : COMMON_uddtApiState_t : Returns the state of the API (see common files for details).
 *=============================================================================**/
COMMON_uddtApiState_t MGPIO_uddtInitPin(MGPIO_uddtPinConfig_t *uddtpinConfig)
{
 800070c:	b580      	push	{r7, lr}
 800070e:	b086      	sub	sp, #24
 8000710:	af00      	add	r7, sp, #0
 8000712:	6078      	str	r0, [r7, #4]
	COMMON_uddtApiState_t ret = UAPI_NOK;
 8000714:	2300      	movs	r3, #0
 8000716:	75fb      	strb	r3, [r7, #23]

	if(uddtpinConfig != NULL_PTR)
 8000718:	687b      	ldr	r3, [r7, #4]
 800071a:	2b00      	cmp	r3, #0
 800071c:	f000 80c7 	beq.w	80008ae <MGPIO_uddtInitPin+0x1a2>
	{
		uint8 u8PinPosationVal;
		vuint32 *vu32ConfigReg = NULL_PTR;
 8000720:	2300      	movs	r3, #0
 8000722:	613b      	str	r3, [r7, #16]
		uint8 u8PinConfigVal = 0;
 8000724:	2300      	movs	r3, #0
 8000726:	73fb      	strb	r3, [r7, #15]

		ret = Get_CRLH_Position(uddtpinConfig->uddtPinNumber ,&u8PinPosationVal);
 8000728:	687b      	ldr	r3, [r7, #4]
 800072a:	791b      	ldrb	r3, [r3, #4]
 800072c:	f107 020e 	add.w	r2, r7, #14
 8000730:	4611      	mov	r1, r2
 8000732:	4618      	mov	r0, r3
 8000734:	f7ff ff7c 	bl	8000630 <Get_CRLH_Position>
 8000738:	4603      	mov	r3, r0
 800073a:	75fb      	strb	r3, [r7, #23]
		vu32ConfigReg = (uddtpinConfig->uddtPinNumber < 8)? (&uddtpinConfig->GPIOx->CRL):(&uddtpinConfig->GPIOx->CRH);
 800073c:	687b      	ldr	r3, [r7, #4]
 800073e:	791b      	ldrb	r3, [r3, #4]
 8000740:	2b07      	cmp	r3, #7
 8000742:	d802      	bhi.n	800074a <MGPIO_uddtInitPin+0x3e>
 8000744:	687b      	ldr	r3, [r7, #4]
 8000746:	681b      	ldr	r3, [r3, #0]
 8000748:	e002      	b.n	8000750 <MGPIO_uddtInitPin+0x44>
 800074a:	687b      	ldr	r3, [r7, #4]
 800074c:	681b      	ldr	r3, [r3, #0]
 800074e:	3304      	adds	r3, #4
 8000750:	613b      	str	r3, [r7, #16]

		(*vu32ConfigReg) &= ~(0xF << u8PinPosationVal);
 8000752:	693b      	ldr	r3, [r7, #16]
 8000754:	681b      	ldr	r3, [r3, #0]
 8000756:	7bba      	ldrb	r2, [r7, #14]
 8000758:	4611      	mov	r1, r2
 800075a:	220f      	movs	r2, #15
 800075c:	408a      	lsls	r2, r1
 800075e:	43d2      	mvns	r2, r2
 8000760:	401a      	ands	r2, r3
 8000762:	693b      	ldr	r3, [r7, #16]
 8000764:	601a      	str	r2, [r3, #0]

		switch(uddtpinConfig->uddtPinMode)
 8000766:	687b      	ldr	r3, [r7, #4]
 8000768:	795b      	ldrb	r3, [r3, #5]
 800076a:	2b08      	cmp	r3, #8
 800076c:	f200 809c 	bhi.w	80008a8 <MGPIO_uddtInitPin+0x19c>
 8000770:	a201      	add	r2, pc, #4	@ (adr r2, 8000778 <MGPIO_uddtInitPin+0x6c>)
 8000772:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000776:	bf00      	nop
 8000778:	080007e1 	.word	0x080007e1
 800077c:	080007e1 	.word	0x080007e1
 8000780:	0800084b 	.word	0x0800084b
 8000784:	08000817 	.word	0x08000817
 8000788:	0800079d 	.word	0x0800079d
 800078c:	0800079d 	.word	0x0800079d
 8000790:	0800079d 	.word	0x0800079d
 8000794:	0800079d 	.word	0x0800079d
 8000798:	0800087d 	.word	0x0800087d
		case MGPIO_OUTPUT_OD_MODE:
		case MGPIO_OUTPUT_PP_MODE:
		case MGPIO_OUTPUT_AF_PP_MODE:
		case MGPIO_OUTPUT_AF_OD_MODE:
		{
			u8PinConfigVal = ((((uddtpinConfig->uddtPinMode - 4 ) << 2) | (uddtpinConfig->uddtPinSpeed)) & 0x0F);
 800079c:	687b      	ldr	r3, [r7, #4]
 800079e:	795b      	ldrb	r3, [r3, #5]
 80007a0:	3b04      	subs	r3, #4
 80007a2:	009b      	lsls	r3, r3, #2
 80007a4:	b25a      	sxtb	r2, r3
 80007a6:	687b      	ldr	r3, [r7, #4]
 80007a8:	799b      	ldrb	r3, [r3, #6]
 80007aa:	b25b      	sxtb	r3, r3
 80007ac:	4313      	orrs	r3, r2
 80007ae:	b25b      	sxtb	r3, r3
 80007b0:	b2db      	uxtb	r3, r3
 80007b2:	f003 030f 	and.w	r3, r3, #15
 80007b6:	73fb      	strb	r3, [r7, #15]
			(*vu32ConfigReg) |= ((u8PinConfigVal) << u8PinPosationVal);
 80007b8:	693b      	ldr	r3, [r7, #16]
 80007ba:	681b      	ldr	r3, [r3, #0]
 80007bc:	7bfa      	ldrb	r2, [r7, #15]
 80007be:	7bb9      	ldrb	r1, [r7, #14]
 80007c0:	408a      	lsls	r2, r1
 80007c2:	431a      	orrs	r2, r3
 80007c4:	693b      	ldr	r3, [r7, #16]
 80007c6:	601a      	str	r2, [r3, #0]
			ret = MGPIO_uddtSetPin(uddtpinConfig->GPIOx,uddtpinConfig->uddtPinNumber,uddtpinConfig->uddtPinLogic);
 80007c8:	687b      	ldr	r3, [r7, #4]
 80007ca:	6818      	ldr	r0, [r3, #0]
 80007cc:	687b      	ldr	r3, [r7, #4]
 80007ce:	7919      	ldrb	r1, [r3, #4]
 80007d0:	687b      	ldr	r3, [r7, #4]
 80007d2:	79db      	ldrb	r3, [r3, #7]
 80007d4:	461a      	mov	r2, r3
 80007d6:	f000 f871 	bl	80008bc <MGPIO_uddtSetPin>
 80007da:	4603      	mov	r3, r0
 80007dc:	75fb      	strb	r3, [r7, #23]
			break;
 80007de:	e068      	b.n	80008b2 <MGPIO_uddtInitPin+0x1a6>
		}
		case MGPIO_ANALOG_MODE:
		case MGPIO_INPUT_FL_MODE:
		{
			u8PinConfigVal = ((((uddtpinConfig->uddtPinMode ) << 2) | (0x00))& 0x0F);
 80007e0:	687b      	ldr	r3, [r7, #4]
 80007e2:	795b      	ldrb	r3, [r3, #5]
 80007e4:	009b      	lsls	r3, r3, #2
 80007e6:	b2db      	uxtb	r3, r3
 80007e8:	f003 030f 	and.w	r3, r3, #15
 80007ec:	73fb      	strb	r3, [r7, #15]
			(*vu32ConfigReg) |= ((u8PinConfigVal) << u8PinPosationVal);
 80007ee:	693b      	ldr	r3, [r7, #16]
 80007f0:	681b      	ldr	r3, [r3, #0]
 80007f2:	7bfa      	ldrb	r2, [r7, #15]
 80007f4:	7bb9      	ldrb	r1, [r7, #14]
 80007f6:	408a      	lsls	r2, r1
 80007f8:	431a      	orrs	r2, r3
 80007fa:	693b      	ldr	r3, [r7, #16]
 80007fc:	601a      	str	r2, [r3, #0]
			ret = MGPIO_uddtSetPin(uddtpinConfig->GPIOx,uddtpinConfig->uddtPinNumber,uddtpinConfig->uddtPinLogic);
 80007fe:	687b      	ldr	r3, [r7, #4]
 8000800:	6818      	ldr	r0, [r3, #0]
 8000802:	687b      	ldr	r3, [r7, #4]
 8000804:	7919      	ldrb	r1, [r3, #4]
 8000806:	687b      	ldr	r3, [r7, #4]
 8000808:	79db      	ldrb	r3, [r3, #7]
 800080a:	461a      	mov	r2, r3
 800080c:	f000 f856 	bl	80008bc <MGPIO_uddtSetPin>
 8000810:	4603      	mov	r3, r0
 8000812:	75fb      	strb	r3, [r7, #23]
			break;
 8000814:	e04d      	b.n	80008b2 <MGPIO_uddtInitPin+0x1a6>
		}
		case MGPIO_INPUT_PD_MODE:
		{
			(*vu32ConfigReg) |= ((0x08) << u8PinPosationVal);
 8000816:	693b      	ldr	r3, [r7, #16]
 8000818:	681b      	ldr	r3, [r3, #0]
 800081a:	7bba      	ldrb	r2, [r7, #14]
 800081c:	4611      	mov	r1, r2
 800081e:	2208      	movs	r2, #8
 8000820:	408a      	lsls	r2, r1
 8000822:	431a      	orrs	r2, r3
 8000824:	693b      	ldr	r3, [r7, #16]
 8000826:	601a      	str	r2, [r3, #0]
			CLR_BIT(uddtpinConfig->GPIOx->ODR , uddtpinConfig->uddtPinNumber);
 8000828:	687b      	ldr	r3, [r7, #4]
 800082a:	681b      	ldr	r3, [r3, #0]
 800082c:	68da      	ldr	r2, [r3, #12]
 800082e:	687b      	ldr	r3, [r7, #4]
 8000830:	791b      	ldrb	r3, [r3, #4]
 8000832:	4619      	mov	r1, r3
 8000834:	2301      	movs	r3, #1
 8000836:	408b      	lsls	r3, r1
 8000838:	43db      	mvns	r3, r3
 800083a:	4619      	mov	r1, r3
 800083c:	687b      	ldr	r3, [r7, #4]
 800083e:	681b      	ldr	r3, [r3, #0]
 8000840:	400a      	ands	r2, r1
 8000842:	60da      	str	r2, [r3, #12]
			ret = UAPI_OK;
 8000844:	2301      	movs	r3, #1
 8000846:	75fb      	strb	r3, [r7, #23]
			break;
 8000848:	e033      	b.n	80008b2 <MGPIO_uddtInitPin+0x1a6>
		}
		case MGPIO_INPUT_PU_MODE:
		{
			(*vu32ConfigReg) |= ((0x08) << u8PinPosationVal);
 800084a:	693b      	ldr	r3, [r7, #16]
 800084c:	681b      	ldr	r3, [r3, #0]
 800084e:	7bba      	ldrb	r2, [r7, #14]
 8000850:	4611      	mov	r1, r2
 8000852:	2208      	movs	r2, #8
 8000854:	408a      	lsls	r2, r1
 8000856:	431a      	orrs	r2, r3
 8000858:	693b      	ldr	r3, [r7, #16]
 800085a:	601a      	str	r2, [r3, #0]
			SET_BIT(uddtpinConfig->GPIOx->ODR , uddtpinConfig->uddtPinNumber);
 800085c:	687b      	ldr	r3, [r7, #4]
 800085e:	681b      	ldr	r3, [r3, #0]
 8000860:	68da      	ldr	r2, [r3, #12]
 8000862:	687b      	ldr	r3, [r7, #4]
 8000864:	791b      	ldrb	r3, [r3, #4]
 8000866:	4619      	mov	r1, r3
 8000868:	2301      	movs	r3, #1
 800086a:	408b      	lsls	r3, r1
 800086c:	4619      	mov	r1, r3
 800086e:	687b      	ldr	r3, [r7, #4]
 8000870:	681b      	ldr	r3, [r3, #0]
 8000872:	430a      	orrs	r2, r1
 8000874:	60da      	str	r2, [r3, #12]
			ret = UAPI_OK;
 8000876:	2301      	movs	r3, #1
 8000878:	75fb      	strb	r3, [r7, #23]
			break;
 800087a:	e01a      	b.n	80008b2 <MGPIO_uddtInitPin+0x1a6>
		}
		case MGPIO_INPUT_AF_MODE:
		{
			u8PinConfigVal = ((((MGPIO_INPUT_FL_MODE) << 2) | (0x00))& 0x0F);
 800087c:	2304      	movs	r3, #4
 800087e:	73fb      	strb	r3, [r7, #15]
			(*vu32ConfigReg) |= ((u8PinConfigVal) << u8PinPosationVal);
 8000880:	693b      	ldr	r3, [r7, #16]
 8000882:	681b      	ldr	r3, [r3, #0]
 8000884:	7bfa      	ldrb	r2, [r7, #15]
 8000886:	7bb9      	ldrb	r1, [r7, #14]
 8000888:	408a      	lsls	r2, r1
 800088a:	431a      	orrs	r2, r3
 800088c:	693b      	ldr	r3, [r7, #16]
 800088e:	601a      	str	r2, [r3, #0]
			ret = MGPIO_uddtSetPin(uddtpinConfig->GPIOx,uddtpinConfig->uddtPinNumber,uddtpinConfig->uddtPinLogic);
 8000890:	687b      	ldr	r3, [r7, #4]
 8000892:	6818      	ldr	r0, [r3, #0]
 8000894:	687b      	ldr	r3, [r7, #4]
 8000896:	7919      	ldrb	r1, [r3, #4]
 8000898:	687b      	ldr	r3, [r7, #4]
 800089a:	79db      	ldrb	r3, [r3, #7]
 800089c:	461a      	mov	r2, r3
 800089e:	f000 f80d 	bl	80008bc <MGPIO_uddtSetPin>
 80008a2:	4603      	mov	r3, r0
 80008a4:	75fb      	strb	r3, [r7, #23]
			break;
 80008a6:	e004      	b.n	80008b2 <MGPIO_uddtInitPin+0x1a6>
		}
		default : ret = UAPI_INVALID_PARM;
 80008a8:	2304      	movs	r3, #4
 80008aa:	75fb      	strb	r3, [r7, #23]
 80008ac:	e001      	b.n	80008b2 <MGPIO_uddtInitPin+0x1a6>
		}
	}
	else
	{
		ret = UAPI_NULL_PTR;
 80008ae:	2302      	movs	r3, #2
 80008b0:	75fb      	strb	r3, [r7, #23]
	}
	return ret;
 80008b2:	7dfb      	ldrb	r3, [r7, #23]
}
 80008b4:	4618      	mov	r0, r3
 80008b6:	3718      	adds	r7, #24
 80008b8:	46bd      	mov	sp, r7
 80008ba:	bd80      	pop	{r7, pc}

080008bc <MGPIO_uddtSetPin>:
 * @param [in]    : uddtPinNumber : The pin number to set the logic state for.
 * @param [in]    : uddtValOfLogic : Desired logic state to set for the GPIO pin.
 * @return        : COMMON_uddtApiState_t : Returns the state of the API (see common files for details).
 *=============================================================================**/
COMMON_uddtApiState_t MGPIO_uddtSetPin(GPIO_registerMap_t  *GPIOx , MGPIO_uddtPinNumber_t uddtPinNumber , MGPIO_uddtPinLogic_t  uddtValOfLogic)
{
 80008bc:	b480      	push	{r7}
 80008be:	b085      	sub	sp, #20
 80008c0:	af00      	add	r7, sp, #0
 80008c2:	6078      	str	r0, [r7, #4]
 80008c4:	460b      	mov	r3, r1
 80008c6:	70fb      	strb	r3, [r7, #3]
 80008c8:	4613      	mov	r3, r2
 80008ca:	70bb      	strb	r3, [r7, #2]
	COMMON_uddtApiState_t ret = UAPI_NOK;
 80008cc:	2300      	movs	r3, #0
 80008ce:	73fb      	strb	r3, [r7, #15]

	if((GPIOx != NULL_PTR))
 80008d0:	687b      	ldr	r3, [r7, #4]
 80008d2:	2b00      	cmp	r3, #0
 80008d4:	d02a      	beq.n	800092c <MGPIO_uddtSetPin+0x70>
	{
		if( ((uddtValOfLogic >= MGPIO_LOGIC_LOW) && (uddtValOfLogic <= MGPIO_LOGIC_HIGH)) &&
 80008d6:	78bb      	ldrb	r3, [r7, #2]
 80008d8:	2b01      	cmp	r3, #1
 80008da:	d824      	bhi.n	8000926 <MGPIO_uddtSetPin+0x6a>
 80008dc:	78fb      	ldrb	r3, [r7, #3]
 80008de:	2b0f      	cmp	r3, #15
 80008e0:	d821      	bhi.n	8000926 <MGPIO_uddtSetPin+0x6a>
				((uddtPinNumber >= MGPIO_PIN0) && (uddtPinNumber <= MGPIO_PIN15)))
		{
			if(uddtValOfLogic == MGPIO_LOGIC_HIGH)
 80008e2:	78bb      	ldrb	r3, [r7, #2]
 80008e4:	2b01      	cmp	r3, #1
 80008e6:	d10b      	bne.n	8000900 <MGPIO_uddtSetPin+0x44>
			{
				SET_BIT(GPIOx->ODR,uddtPinNumber);
 80008e8:	687b      	ldr	r3, [r7, #4]
 80008ea:	68db      	ldr	r3, [r3, #12]
 80008ec:	78fa      	ldrb	r2, [r7, #3]
 80008ee:	2101      	movs	r1, #1
 80008f0:	fa01 f202 	lsl.w	r2, r1, r2
 80008f4:	431a      	orrs	r2, r3
 80008f6:	687b      	ldr	r3, [r7, #4]
 80008f8:	60da      	str	r2, [r3, #12]
				ret = UAPI_OK;
 80008fa:	2301      	movs	r3, #1
 80008fc:	73fb      	strb	r3, [r7, #15]
			if(uddtValOfLogic == MGPIO_LOGIC_HIGH)
 80008fe:	e017      	b.n	8000930 <MGPIO_uddtSetPin+0x74>
			}
			else if(uddtValOfLogic == MGPIO_LOGIC_LOW)
 8000900:	78bb      	ldrb	r3, [r7, #2]
 8000902:	2b00      	cmp	r3, #0
 8000904:	d10c      	bne.n	8000920 <MGPIO_uddtSetPin+0x64>
			{
				CLR_BIT(GPIOx->ODR,uddtPinNumber);
 8000906:	687b      	ldr	r3, [r7, #4]
 8000908:	68db      	ldr	r3, [r3, #12]
 800090a:	78fa      	ldrb	r2, [r7, #3]
 800090c:	2101      	movs	r1, #1
 800090e:	fa01 f202 	lsl.w	r2, r1, r2
 8000912:	43d2      	mvns	r2, r2
 8000914:	401a      	ands	r2, r3
 8000916:	687b      	ldr	r3, [r7, #4]
 8000918:	60da      	str	r2, [r3, #12]
				ret = UAPI_OK;
 800091a:	2301      	movs	r3, #1
 800091c:	73fb      	strb	r3, [r7, #15]
			if(uddtValOfLogic == MGPIO_LOGIC_HIGH)
 800091e:	e007      	b.n	8000930 <MGPIO_uddtSetPin+0x74>
			}
			else
			{
				ret = UAPI_INVALID_PARM;
 8000920:	2304      	movs	r3, #4
 8000922:	73fb      	strb	r3, [r7, #15]
			if(uddtValOfLogic == MGPIO_LOGIC_HIGH)
 8000924:	e004      	b.n	8000930 <MGPIO_uddtSetPin+0x74>
			}
		}
		else
		{
			ret = UAPI_INVALID_PARM;
 8000926:	2304      	movs	r3, #4
 8000928:	73fb      	strb	r3, [r7, #15]
 800092a:	e001      	b.n	8000930 <MGPIO_uddtSetPin+0x74>
		}
	}
	else
	{
		ret = UAPI_NULL_PTR;
 800092c:	2302      	movs	r3, #2
 800092e:	73fb      	strb	r3, [r7, #15]
	}
	return ret;
 8000930:	7bfb      	ldrb	r3, [r7, #15]
}
 8000932:	4618      	mov	r0, r3
 8000934:	3714      	adds	r7, #20
 8000936:	46bd      	mov	sp, r7
 8000938:	bc80      	pop	{r7}
 800093a:	4770      	bx	lr

0800093c <MNVIC_uddtEnableIRQ>:
 * @Brief         : Enables a specific IRQ.
 * @Param [in]    : u8IRQ : IRQ number to be enabled.
 * @Retval        : COMMON_uddtApiState_t : Returns the state of the API (see common files for details).
===============================================================================================*/
COMMON_uddtApiState_t MNVIC_uddtEnableIRQ(uint8 u8IRQ)
{
 800093c:	b480      	push	{r7}
 800093e:	b085      	sub	sp, #20
 8000940:	af00      	add	r7, sp, #0
 8000942:	4603      	mov	r3, r0
 8000944:	71fb      	strb	r3, [r7, #7]
	COMMON_uddtApiState_t ret = UAPI_NOK;
 8000946:	2300      	movs	r3, #0
 8000948:	73fb      	strb	r3, [r7, #15]
	if( (u8IRQ >= MNVIC_WWDG_IRQ) && (u8IRQ <= MNVIC_DMA2_Channel4_5_IRQ) )
 800094a:	79fb      	ldrb	r3, [r7, #7]
 800094c:	2b3b      	cmp	r3, #59	@ 0x3b
 800094e:	d80f      	bhi.n	8000970 <MNVIC_uddtEnableIRQ+0x34>
	{
		NVIC->ISERx[getIRQReg(u8IRQ)] = (1UL << getIRQPos(u8IRQ));
 8000950:	79fb      	ldrb	r3, [r7, #7]
 8000952:	f003 031f 	and.w	r3, r3, #31
 8000956:	490a      	ldr	r1, [pc, #40]	@ (8000980 <MNVIC_uddtEnableIRQ+0x44>)
 8000958:	79fa      	ldrb	r2, [r7, #7]
 800095a:	0952      	lsrs	r2, r2, #5
 800095c:	b2d2      	uxtb	r2, r2
 800095e:	4610      	mov	r0, r2
 8000960:	2201      	movs	r2, #1
 8000962:	fa02 f303 	lsl.w	r3, r2, r3
 8000966:	f841 3020 	str.w	r3, [r1, r0, lsl #2]
		ret = UAPI_OK;
 800096a:	2301      	movs	r3, #1
 800096c:	73fb      	strb	r3, [r7, #15]
 800096e:	e001      	b.n	8000974 <MNVIC_uddtEnableIRQ+0x38>
	}
	else
	{
		ret = UAPI_INVALID_PARM;
 8000970:	2304      	movs	r3, #4
 8000972:	73fb      	strb	r3, [r7, #15]
	}
	return ret;
 8000974:	7bfb      	ldrb	r3, [r7, #15]
}
 8000976:	4618      	mov	r0, r3
 8000978:	3714      	adds	r7, #20
 800097a:	46bd      	mov	sp, r7
 800097c:	bc80      	pop	{r7}
 800097e:	4770      	bx	lr
 8000980:	e000e100 	.word	0xe000e100

08000984 <MNVIC_uddtDisableIRQ>:
 * @Brief         : Disables a specific IRQ.
 * @Param [in]    : u8IRQ : IRQ number to be disabled.
 * @Retval        : COMMON_uddtApiState_t : Returns the state of the API (see common files for details).
===============================================================================================*/
COMMON_uddtApiState_t MNVIC_uddtDisableIRQ(uint8 u8IRQ)
{
 8000984:	b480      	push	{r7}
 8000986:	b085      	sub	sp, #20
 8000988:	af00      	add	r7, sp, #0
 800098a:	4603      	mov	r3, r0
 800098c:	71fb      	strb	r3, [r7, #7]
	COMMON_uddtApiState_t ret = UAPI_NOK;
 800098e:	2300      	movs	r3, #0
 8000990:	73fb      	strb	r3, [r7, #15]
	if( (u8IRQ >= MNVIC_WWDG_IRQ) && (u8IRQ <= MNVIC_DMA2_Channel4_5_IRQ) )
 8000992:	79fb      	ldrb	r3, [r7, #7]
 8000994:	2b3b      	cmp	r3, #59	@ 0x3b
 8000996:	d810      	bhi.n	80009ba <MNVIC_uddtDisableIRQ+0x36>
	{
		NVIC->ICERx[getIRQReg(u8IRQ)] = (1UL << getIRQPos(u8IRQ));
 8000998:	79fb      	ldrb	r3, [r7, #7]
 800099a:	f003 031f 	and.w	r3, r3, #31
 800099e:	490b      	ldr	r1, [pc, #44]	@ (80009cc <MNVIC_uddtDisableIRQ+0x48>)
 80009a0:	79fa      	ldrb	r2, [r7, #7]
 80009a2:	0952      	lsrs	r2, r2, #5
 80009a4:	b2d2      	uxtb	r2, r2
 80009a6:	4610      	mov	r0, r2
 80009a8:	2201      	movs	r2, #1
 80009aa:	409a      	lsls	r2, r3
 80009ac:	f100 0320 	add.w	r3, r0, #32
 80009b0:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
		ret = UAPI_OK;
 80009b4:	2301      	movs	r3, #1
 80009b6:	73fb      	strb	r3, [r7, #15]
 80009b8:	e001      	b.n	80009be <MNVIC_uddtDisableIRQ+0x3a>
	}
	else
	{
		ret = UAPI_INVALID_PARM;
 80009ba:	2304      	movs	r3, #4
 80009bc:	73fb      	strb	r3, [r7, #15]
	}
	return ret;
 80009be:	7bfb      	ldrb	r3, [r7, #15]
}
 80009c0:	4618      	mov	r0, r3
 80009c2:	3714      	adds	r7, #20
 80009c4:	46bd      	mov	sp, r7
 80009c6:	bc80      	pop	{r7}
 80009c8:	4770      	bx	lr
 80009ca:	bf00      	nop
 80009cc:	e000e100 	.word	0xe000e100

080009d0 <MRCC_uddtInitClk>:
 * @Param [in]    : uddtAhbPrescaler  : AHB bus prescaler configuration.
 * @Retval        : COMMON_uddtApiState_t : Returns the state of the API (see common files for details).
===============================================================================================*/
COMMON_uddtApiState_t MRCC_uddtInitClk(MRCC_uddtClkSource_t uddtClkSelect,
		MRCC_uddtApbPrescaler_t uddtApb1Prescaler, MRCC_uddtApbPrescaler_t uddtApb2Prescaler, MRCC_uddtAhbPrescaler_t uddtAhbPrescaler)
{
 80009d0:	b490      	push	{r4, r7}
 80009d2:	b084      	sub	sp, #16
 80009d4:	af00      	add	r7, sp, #0
 80009d6:	4604      	mov	r4, r0
 80009d8:	4608      	mov	r0, r1
 80009da:	4611      	mov	r1, r2
 80009dc:	461a      	mov	r2, r3
 80009de:	4623      	mov	r3, r4
 80009e0:	71fb      	strb	r3, [r7, #7]
 80009e2:	4603      	mov	r3, r0
 80009e4:	71bb      	strb	r3, [r7, #6]
 80009e6:	460b      	mov	r3, r1
 80009e8:	717b      	strb	r3, [r7, #5]
 80009ea:	4613      	mov	r3, r2
 80009ec:	713b      	strb	r3, [r7, #4]
	COMMON_uddtApiState_t ret = UAPI_NOK;
 80009ee:	2300      	movs	r3, #0
 80009f0:	73fb      	strb	r3, [r7, #15]

	if(((uddtClkSelect >= MRCC_HSI) && (uddtClkSelect <= MRCC_HSE))
 80009f2:	79fb      	ldrb	r3, [r7, #7]
 80009f4:	2b01      	cmp	r3, #1
 80009f6:	f200 808d 	bhi.w	8000b14 <MRCC_uddtInitClk+0x144>
			&&((uddtApb1Prescaler >= MRCC_APB_PRESCALER_0) && (uddtApb1Prescaler <= MRCC_APB_PRESCALER_16))
 80009fa:	79bb      	ldrb	r3, [r7, #6]
 80009fc:	2b07      	cmp	r3, #7
 80009fe:	f200 8089 	bhi.w	8000b14 <MRCC_uddtInitClk+0x144>
			&&((uddtApb2Prescaler >= MRCC_APB_PRESCALER_0) && (uddtApb2Prescaler <= MRCC_APB_PRESCALER_16))
 8000a02:	797b      	ldrb	r3, [r7, #5]
 8000a04:	2b07      	cmp	r3, #7
 8000a06:	f200 8085 	bhi.w	8000b14 <MRCC_uddtInitClk+0x144>
			&&((uddtAhbPrescaler >= MRCC_AHB_PRESCALER_0) && (uddtAhbPrescaler <= MRCC_AHB_PRESCALER_512)))
 8000a0a:	793b      	ldrb	r3, [r7, #4]
 8000a0c:	2b0f      	cmp	r3, #15
 8000a0e:	f200 8081 	bhi.w	8000b14 <MRCC_uddtInitClk+0x144>
	{
		switch(uddtClkSelect)
 8000a12:	79fb      	ldrb	r3, [r7, #7]
 8000a14:	2b00      	cmp	r3, #0
 8000a16:	d002      	beq.n	8000a1e <MRCC_uddtInitClk+0x4e>
 8000a18:	2b01      	cmp	r3, #1
 8000a1a:	d02a      	beq.n	8000a72 <MRCC_uddtInitClk+0xa2>
 8000a1c:	e059      	b.n	8000ad2 <MRCC_uddtInitClk+0x102>
		{
		case MRCC_HSI:
		{
			RCC->CR &= ~(1UL << 24);
 8000a1e:	4b41      	ldr	r3, [pc, #260]	@ (8000b24 <MRCC_uddtInitClk+0x154>)
 8000a20:	681b      	ldr	r3, [r3, #0]
 8000a22:	4a40      	ldr	r2, [pc, #256]	@ (8000b24 <MRCC_uddtInitClk+0x154>)
 8000a24:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8000a28:	6013      	str	r3, [r2, #0]
			RCC->CR &= ~(1UL << 16);
 8000a2a:	4b3e      	ldr	r3, [pc, #248]	@ (8000b24 <MRCC_uddtInitClk+0x154>)
 8000a2c:	681b      	ldr	r3, [r3, #0]
 8000a2e:	4a3d      	ldr	r2, [pc, #244]	@ (8000b24 <MRCC_uddtInitClk+0x154>)
 8000a30:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8000a34:	6013      	str	r3, [r2, #0]
			RCC->CR |= (1<<0);
 8000a36:	4b3b      	ldr	r3, [pc, #236]	@ (8000b24 <MRCC_uddtInitClk+0x154>)
 8000a38:	681b      	ldr	r3, [r3, #0]
 8000a3a:	4a3a      	ldr	r2, [pc, #232]	@ (8000b24 <MRCC_uddtInitClk+0x154>)
 8000a3c:	f043 0301 	orr.w	r3, r3, #1
 8000a40:	6013      	str	r3, [r2, #0]
			while((((RCC->CR >> 1) & 0x01UL)) == 0x00);
 8000a42:	bf00      	nop
 8000a44:	4b37      	ldr	r3, [pc, #220]	@ (8000b24 <MRCC_uddtInitClk+0x154>)
 8000a46:	681b      	ldr	r3, [r3, #0]
 8000a48:	f003 0302 	and.w	r3, r3, #2
 8000a4c:	2b00      	cmp	r3, #0
 8000a4e:	d0f9      	beq.n	8000a44 <MRCC_uddtInitClk+0x74>
			RCC->CFGR &= ~(1<<0b11UL);
 8000a50:	4b34      	ldr	r3, [pc, #208]	@ (8000b24 <MRCC_uddtInitClk+0x154>)
 8000a52:	685b      	ldr	r3, [r3, #4]
 8000a54:	4a33      	ldr	r2, [pc, #204]	@ (8000b24 <MRCC_uddtInitClk+0x154>)
 8000a56:	f023 0308 	bic.w	r3, r3, #8
 8000a5a:	6053      	str	r3, [r2, #4]
			while((((RCC->CFGR) >> 2) & 0x03UL) != 0x00);
 8000a5c:	bf00      	nop
 8000a5e:	4b31      	ldr	r3, [pc, #196]	@ (8000b24 <MRCC_uddtInitClk+0x154>)
 8000a60:	685b      	ldr	r3, [r3, #4]
 8000a62:	089b      	lsrs	r3, r3, #2
 8000a64:	f003 0303 	and.w	r3, r3, #3
 8000a68:	2b00      	cmp	r3, #0
 8000a6a:	d1f8      	bne.n	8000a5e <MRCC_uddtInitClk+0x8e>
			ret = UAPI_OK;
 8000a6c:	2301      	movs	r3, #1
 8000a6e:	73fb      	strb	r3, [r7, #15]
			break;
 8000a70:	e031      	b.n	8000ad6 <MRCC_uddtInitClk+0x106>
		}
		case MRCC_HSE:
		{
			RCC->CR &= ~(1UL << 24);
 8000a72:	4b2c      	ldr	r3, [pc, #176]	@ (8000b24 <MRCC_uddtInitClk+0x154>)
 8000a74:	681b      	ldr	r3, [r3, #0]
 8000a76:	4a2b      	ldr	r2, [pc, #172]	@ (8000b24 <MRCC_uddtInitClk+0x154>)
 8000a78:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8000a7c:	6013      	str	r3, [r2, #0]
			RCC->CR &= ~(1UL << 0);
 8000a7e:	4b29      	ldr	r3, [pc, #164]	@ (8000b24 <MRCC_uddtInitClk+0x154>)
 8000a80:	681b      	ldr	r3, [r3, #0]
 8000a82:	4a28      	ldr	r2, [pc, #160]	@ (8000b24 <MRCC_uddtInitClk+0x154>)
 8000a84:	f023 0301 	bic.w	r3, r3, #1
 8000a88:	6013      	str	r3, [r2, #0]
			RCC->CR |= (1<<16);
 8000a8a:	4b26      	ldr	r3, [pc, #152]	@ (8000b24 <MRCC_uddtInitClk+0x154>)
 8000a8c:	681b      	ldr	r3, [r3, #0]
 8000a8e:	4a25      	ldr	r2, [pc, #148]	@ (8000b24 <MRCC_uddtInitClk+0x154>)
 8000a90:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8000a94:	6013      	str	r3, [r2, #0]
			while(((RCC->CR >> 17) & 0x01UL) == 0x00);
 8000a96:	bf00      	nop
 8000a98:	4b22      	ldr	r3, [pc, #136]	@ (8000b24 <MRCC_uddtInitClk+0x154>)
 8000a9a:	681b      	ldr	r3, [r3, #0]
 8000a9c:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8000aa0:	2b00      	cmp	r3, #0
 8000aa2:	d0f9      	beq.n	8000a98 <MRCC_uddtInitClk+0xc8>
			RCC->CFGR &= ~(1<<0b11UL);
 8000aa4:	4b1f      	ldr	r3, [pc, #124]	@ (8000b24 <MRCC_uddtInitClk+0x154>)
 8000aa6:	685b      	ldr	r3, [r3, #4]
 8000aa8:	4a1e      	ldr	r2, [pc, #120]	@ (8000b24 <MRCC_uddtInitClk+0x154>)
 8000aaa:	f023 0308 	bic.w	r3, r3, #8
 8000aae:	6053      	str	r3, [r2, #4]
			RCC->CFGR |= 0x01UL;
 8000ab0:	4b1c      	ldr	r3, [pc, #112]	@ (8000b24 <MRCC_uddtInitClk+0x154>)
 8000ab2:	685b      	ldr	r3, [r3, #4]
 8000ab4:	4a1b      	ldr	r2, [pc, #108]	@ (8000b24 <MRCC_uddtInitClk+0x154>)
 8000ab6:	f043 0301 	orr.w	r3, r3, #1
 8000aba:	6053      	str	r3, [r2, #4]
			while((((RCC->CFGR) >> 2) & 0x03UL) != 0x01);
 8000abc:	bf00      	nop
 8000abe:	4b19      	ldr	r3, [pc, #100]	@ (8000b24 <MRCC_uddtInitClk+0x154>)
 8000ac0:	685b      	ldr	r3, [r3, #4]
 8000ac2:	089b      	lsrs	r3, r3, #2
 8000ac4:	f003 0303 	and.w	r3, r3, #3
 8000ac8:	2b01      	cmp	r3, #1
 8000aca:	d1f8      	bne.n	8000abe <MRCC_uddtInitClk+0xee>
			ret = UAPI_OK;
 8000acc:	2301      	movs	r3, #1
 8000ace:	73fb      	strb	r3, [r7, #15]
			break;
 8000ad0:	e001      	b.n	8000ad6 <MRCC_uddtInitClk+0x106>
		}
		default : ret = UAPI_INVALID_PARM;
 8000ad2:	2304      	movs	r3, #4
 8000ad4:	73fb      	strb	r3, [r7, #15]
		}

		if(ret == UAPI_OK)
 8000ad6:	7bfb      	ldrb	r3, [r7, #15]
 8000ad8:	2b01      	cmp	r3, #1
 8000ada:	d11d      	bne.n	8000b18 <MRCC_uddtInitClk+0x148>
		{
			RCC->CFGR = (RCC->CFGR & ~(0b111 << 11)) | (uddtApb2Prescaler << 11);
 8000adc:	4b11      	ldr	r3, [pc, #68]	@ (8000b24 <MRCC_uddtInitClk+0x154>)
 8000ade:	685b      	ldr	r3, [r3, #4]
 8000ae0:	f423 5260 	bic.w	r2, r3, #14336	@ 0x3800
 8000ae4:	797b      	ldrb	r3, [r7, #5]
 8000ae6:	02db      	lsls	r3, r3, #11
 8000ae8:	490e      	ldr	r1, [pc, #56]	@ (8000b24 <MRCC_uddtInitClk+0x154>)
 8000aea:	4313      	orrs	r3, r2
 8000aec:	604b      	str	r3, [r1, #4]
			RCC->CFGR = (RCC->CFGR & ~(0b111 <<  8)) | (uddtApb1Prescaler <<  8);
 8000aee:	4b0d      	ldr	r3, [pc, #52]	@ (8000b24 <MRCC_uddtInitClk+0x154>)
 8000af0:	685b      	ldr	r3, [r3, #4]
 8000af2:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 8000af6:	79bb      	ldrb	r3, [r7, #6]
 8000af8:	021b      	lsls	r3, r3, #8
 8000afa:	490a      	ldr	r1, [pc, #40]	@ (8000b24 <MRCC_uddtInitClk+0x154>)
 8000afc:	4313      	orrs	r3, r2
 8000afe:	604b      	str	r3, [r1, #4]
			RCC->CFGR = (RCC->CFGR & ~(0b1111 << 4)) | (uddtAhbPrescaler  <<  4);
 8000b00:	4b08      	ldr	r3, [pc, #32]	@ (8000b24 <MRCC_uddtInitClk+0x154>)
 8000b02:	685b      	ldr	r3, [r3, #4]
 8000b04:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8000b08:	793b      	ldrb	r3, [r7, #4]
 8000b0a:	011b      	lsls	r3, r3, #4
 8000b0c:	4905      	ldr	r1, [pc, #20]	@ (8000b24 <MRCC_uddtInitClk+0x154>)
 8000b0e:	4313      	orrs	r3, r2
 8000b10:	604b      	str	r3, [r1, #4]
		if(ret == UAPI_OK)
 8000b12:	e001      	b.n	8000b18 <MRCC_uddtInitClk+0x148>
		}
		else{/*Do Nothing*/};
	}
	else
	{
		ret = UAPI_INVALID_PARM;
 8000b14:	2304      	movs	r3, #4
 8000b16:	73fb      	strb	r3, [r7, #15]
	}
	return ret;
 8000b18:	7bfb      	ldrb	r3, [r7, #15]
}
 8000b1a:	4618      	mov	r0, r3
 8000b1c:	3710      	adds	r7, #16
 8000b1e:	46bd      	mov	sp, r7
 8000b20:	bc90      	pop	{r4, r7}
 8000b22:	4770      	bx	lr
 8000b24:	40021000 	.word	0x40021000

08000b28 <MRCC_uddtEnablePeripheral>:
 * @Brief         : Enables a specific peripheral.
 * @Param [in]    : uddtPeripheral : Peripheral to be enabled.
 * @Retval        : COMMON_uddtApiState_t : Returns the state of the API (see common files for details).
===============================================================================================*/
COMMON_uddtApiState_t MRCC_uddtEnablePeripheral(MRCC_uddtPeripheral_t uddtPeripheral)
{
 8000b28:	b480      	push	{r7}
 8000b2a:	b085      	sub	sp, #20
 8000b2c:	af00      	add	r7, sp, #0
 8000b2e:	4603      	mov	r3, r0
 8000b30:	71fb      	strb	r3, [r7, #7]
	COMMON_uddtApiState_t ret = UAPI_NOK;
 8000b32:	2300      	movs	r3, #0
 8000b34:	73fb      	strb	r3, [r7, #15]

	if((uddtPeripheral >= MRCC_DMA1) && (uddtPeripheral <= MRCC_DAC))
 8000b36:	79fb      	ldrb	r3, [r7, #7]
 8000b38:	2b2f      	cmp	r3, #47	@ 0x2f
 8000b3a:	f200 821c 	bhi.w	8000f76 <MRCC_uddtEnablePeripheral+0x44e>
	{
		switch (uddtPeripheral) {
 8000b3e:	79fb      	ldrb	r3, [r7, #7]
 8000b40:	2b2f      	cmp	r3, #47	@ 0x2f
 8000b42:	f200 8215 	bhi.w	8000f70 <MRCC_uddtEnablePeripheral+0x448>
 8000b46:	a201      	add	r2, pc, #4	@ (adr r2, 8000b4c <MRCC_uddtEnablePeripheral+0x24>)
 8000b48:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000b4c:	08000c0d 	.word	0x08000c0d
 8000b50:	08000c1f 	.word	0x08000c1f
 8000b54:	08000c31 	.word	0x08000c31
 8000b58:	08000c43 	.word	0x08000c43
 8000b5c:	08000c55 	.word	0x08000c55
 8000b60:	08000c67 	.word	0x08000c67
 8000b64:	08000c79 	.word	0x08000c79
 8000b68:	08000c8b 	.word	0x08000c8b
 8000b6c:	08000c9d 	.word	0x08000c9d
 8000b70:	08000caf 	.word	0x08000caf
 8000b74:	08000cc1 	.word	0x08000cc1
 8000b78:	08000cd3 	.word	0x08000cd3
 8000b7c:	08000ce5 	.word	0x08000ce5
 8000b80:	08000cf7 	.word	0x08000cf7
 8000b84:	08000d09 	.word	0x08000d09
 8000b88:	08000d1b 	.word	0x08000d1b
 8000b8c:	08000d2d 	.word	0x08000d2d
 8000b90:	08000d3f 	.word	0x08000d3f
 8000b94:	08000d51 	.word	0x08000d51
 8000b98:	08000d63 	.word	0x08000d63
 8000b9c:	08000d75 	.word	0x08000d75
 8000ba0:	08000d87 	.word	0x08000d87
 8000ba4:	08000d99 	.word	0x08000d99
 8000ba8:	08000dab 	.word	0x08000dab
 8000bac:	08000dbd 	.word	0x08000dbd
 8000bb0:	08000dcf 	.word	0x08000dcf
 8000bb4:	08000de1 	.word	0x08000de1
 8000bb8:	08000df3 	.word	0x08000df3
 8000bbc:	08000e05 	.word	0x08000e05
 8000bc0:	08000e17 	.word	0x08000e17
 8000bc4:	08000e29 	.word	0x08000e29
 8000bc8:	08000e3b 	.word	0x08000e3b
 8000bcc:	08000e4d 	.word	0x08000e4d
 8000bd0:	08000e5f 	.word	0x08000e5f
 8000bd4:	08000e71 	.word	0x08000e71
 8000bd8:	08000e83 	.word	0x08000e83
 8000bdc:	08000e99 	.word	0x08000e99
 8000be0:	08000eab 	.word	0x08000eab
 8000be4:	08000ebd 	.word	0x08000ebd
 8000be8:	08000ecf 	.word	0x08000ecf
 8000bec:	08000ee1 	.word	0x08000ee1
 8000bf0:	08000ef3 	.word	0x08000ef3
 8000bf4:	08000f05 	.word	0x08000f05
 8000bf8:	08000f17 	.word	0x08000f17
 8000bfc:	08000f29 	.word	0x08000f29
 8000c00:	08000f3b 	.word	0x08000f3b
 8000c04:	08000f4d 	.word	0x08000f4d
 8000c08:	08000f5f 	.word	0x08000f5f
		case MRCC_DMA1: 	RCC->AHBENR |=(1<<0); 	ret =UAPI_OK;	break;
 8000c0c:	4ba1      	ldr	r3, [pc, #644]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000c0e:	695b      	ldr	r3, [r3, #20]
 8000c10:	4aa0      	ldr	r2, [pc, #640]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000c12:	f043 0301 	orr.w	r3, r3, #1
 8000c16:	6153      	str	r3, [r2, #20]
 8000c18:	2301      	movs	r3, #1
 8000c1a:	73fb      	strb	r3, [r7, #15]
 8000c1c:	e1ad      	b.n	8000f7a <MRCC_uddtEnablePeripheral+0x452>
		case MRCC_DMA2:		RCC->AHBENR |=(1<<1); 	ret =UAPI_OK;	break;
 8000c1e:	4b9d      	ldr	r3, [pc, #628]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000c20:	695b      	ldr	r3, [r3, #20]
 8000c22:	4a9c      	ldr	r2, [pc, #624]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000c24:	f043 0302 	orr.w	r3, r3, #2
 8000c28:	6153      	str	r3, [r2, #20]
 8000c2a:	2301      	movs	r3, #1
 8000c2c:	73fb      	strb	r3, [r7, #15]
 8000c2e:	e1a4      	b.n	8000f7a <MRCC_uddtEnablePeripheral+0x452>
		case MRCC_SRAM: 	RCC->AHBENR |=(1<<2); 	ret =UAPI_OK;	break;
 8000c30:	4b98      	ldr	r3, [pc, #608]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000c32:	695b      	ldr	r3, [r3, #20]
 8000c34:	4a97      	ldr	r2, [pc, #604]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000c36:	f043 0304 	orr.w	r3, r3, #4
 8000c3a:	6153      	str	r3, [r2, #20]
 8000c3c:	2301      	movs	r3, #1
 8000c3e:	73fb      	strb	r3, [r7, #15]
 8000c40:	e19b      	b.n	8000f7a <MRCC_uddtEnablePeripheral+0x452>
		case MRCC_FLITF:	RCC->AHBENR |=(1<<4); 	ret =UAPI_OK;	break;
 8000c42:	4b94      	ldr	r3, [pc, #592]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000c44:	695b      	ldr	r3, [r3, #20]
 8000c46:	4a93      	ldr	r2, [pc, #588]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000c48:	f043 0310 	orr.w	r3, r3, #16
 8000c4c:	6153      	str	r3, [r2, #20]
 8000c4e:	2301      	movs	r3, #1
 8000c50:	73fb      	strb	r3, [r7, #15]
 8000c52:	e192      	b.n	8000f7a <MRCC_uddtEnablePeripheral+0x452>
		case MRCC_CRC:  	RCC->AHBENR |=(1<<6); 	ret =UAPI_OK;	break;
 8000c54:	4b8f      	ldr	r3, [pc, #572]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000c56:	695b      	ldr	r3, [r3, #20]
 8000c58:	4a8e      	ldr	r2, [pc, #568]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000c5a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000c5e:	6153      	str	r3, [r2, #20]
 8000c60:	2301      	movs	r3, #1
 8000c62:	73fb      	strb	r3, [r7, #15]
 8000c64:	e189      	b.n	8000f7a <MRCC_uddtEnablePeripheral+0x452>
		case MRCC_FSMC: 	RCC->AHBENR |=(1<<8); 	ret =UAPI_OK;	break;
 8000c66:	4b8b      	ldr	r3, [pc, #556]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000c68:	695b      	ldr	r3, [r3, #20]
 8000c6a:	4a8a      	ldr	r2, [pc, #552]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000c6c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8000c70:	6153      	str	r3, [r2, #20]
 8000c72:	2301      	movs	r3, #1
 8000c74:	73fb      	strb	r3, [r7, #15]
 8000c76:	e180      	b.n	8000f7a <MRCC_uddtEnablePeripheral+0x452>
		case MRCC_SDIO: 	RCC->AHBENR |=(1<<10);	ret =UAPI_OK;	break;
 8000c78:	4b86      	ldr	r3, [pc, #536]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000c7a:	695b      	ldr	r3, [r3, #20]
 8000c7c:	4a85      	ldr	r2, [pc, #532]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000c7e:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8000c82:	6153      	str	r3, [r2, #20]
 8000c84:	2301      	movs	r3, #1
 8000c86:	73fb      	strb	r3, [r7, #15]
 8000c88:	e177      	b.n	8000f7a <MRCC_uddtEnablePeripheral+0x452>
		case MRCC_AFIO: 	RCC->APB2ENR |=(1<<0);	ret =UAPI_OK;	break;
 8000c8a:	4b82      	ldr	r3, [pc, #520]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000c8c:	699b      	ldr	r3, [r3, #24]
 8000c8e:	4a81      	ldr	r2, [pc, #516]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000c90:	f043 0301 	orr.w	r3, r3, #1
 8000c94:	6193      	str	r3, [r2, #24]
 8000c96:	2301      	movs	r3, #1
 8000c98:	73fb      	strb	r3, [r7, #15]
 8000c9a:	e16e      	b.n	8000f7a <MRCC_uddtEnablePeripheral+0x452>
		case MRCC_IOPA: 	RCC->APB2ENR |=(1<<2);	ret =UAPI_OK;	break;
 8000c9c:	4b7d      	ldr	r3, [pc, #500]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000c9e:	699b      	ldr	r3, [r3, #24]
 8000ca0:	4a7c      	ldr	r2, [pc, #496]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000ca2:	f043 0304 	orr.w	r3, r3, #4
 8000ca6:	6193      	str	r3, [r2, #24]
 8000ca8:	2301      	movs	r3, #1
 8000caa:	73fb      	strb	r3, [r7, #15]
 8000cac:	e165      	b.n	8000f7a <MRCC_uddtEnablePeripheral+0x452>
		case MRCC_IOPB:		RCC->APB2ENR |=(1<<3);	ret =UAPI_OK;	break;
 8000cae:	4b79      	ldr	r3, [pc, #484]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000cb0:	699b      	ldr	r3, [r3, #24]
 8000cb2:	4a78      	ldr	r2, [pc, #480]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000cb4:	f043 0308 	orr.w	r3, r3, #8
 8000cb8:	6193      	str	r3, [r2, #24]
 8000cba:	2301      	movs	r3, #1
 8000cbc:	73fb      	strb	r3, [r7, #15]
 8000cbe:	e15c      	b.n	8000f7a <MRCC_uddtEnablePeripheral+0x452>
		case MRCC_IOPC: 	RCC->APB2ENR |=(1<<4);	ret =UAPI_OK;	break;
 8000cc0:	4b74      	ldr	r3, [pc, #464]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000cc2:	699b      	ldr	r3, [r3, #24]
 8000cc4:	4a73      	ldr	r2, [pc, #460]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000cc6:	f043 0310 	orr.w	r3, r3, #16
 8000cca:	6193      	str	r3, [r2, #24]
 8000ccc:	2301      	movs	r3, #1
 8000cce:	73fb      	strb	r3, [r7, #15]
 8000cd0:	e153      	b.n	8000f7a <MRCC_uddtEnablePeripheral+0x452>
		case MRCC_IOPD: 	RCC->APB2ENR |=(1<<5);	ret =UAPI_OK;	break;
 8000cd2:	4b70      	ldr	r3, [pc, #448]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000cd4:	699b      	ldr	r3, [r3, #24]
 8000cd6:	4a6f      	ldr	r2, [pc, #444]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000cd8:	f043 0320 	orr.w	r3, r3, #32
 8000cdc:	6193      	str	r3, [r2, #24]
 8000cde:	2301      	movs	r3, #1
 8000ce0:	73fb      	strb	r3, [r7, #15]
 8000ce2:	e14a      	b.n	8000f7a <MRCC_uddtEnablePeripheral+0x452>
		case MRCC_IOPE:		RCC->APB2ENR |=(1<<6);	ret =UAPI_OK;	break;
 8000ce4:	4b6b      	ldr	r3, [pc, #428]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000ce6:	699b      	ldr	r3, [r3, #24]
 8000ce8:	4a6a      	ldr	r2, [pc, #424]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000cea:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000cee:	6193      	str	r3, [r2, #24]
 8000cf0:	2301      	movs	r3, #1
 8000cf2:	73fb      	strb	r3, [r7, #15]
 8000cf4:	e141      	b.n	8000f7a <MRCC_uddtEnablePeripheral+0x452>
		case MRCC_IOPF:		RCC->APB2ENR |=(1<<7);	ret =UAPI_OK;	break;
 8000cf6:	4b67      	ldr	r3, [pc, #412]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000cf8:	699b      	ldr	r3, [r3, #24]
 8000cfa:	4a66      	ldr	r2, [pc, #408]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000cfc:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000d00:	6193      	str	r3, [r2, #24]
 8000d02:	2301      	movs	r3, #1
 8000d04:	73fb      	strb	r3, [r7, #15]
 8000d06:	e138      	b.n	8000f7a <MRCC_uddtEnablePeripheral+0x452>
		case MRCC_IOPG:		RCC->APB2ENR |=(1<<8);	ret =UAPI_OK;	break;
 8000d08:	4b62      	ldr	r3, [pc, #392]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000d0a:	699b      	ldr	r3, [r3, #24]
 8000d0c:	4a61      	ldr	r2, [pc, #388]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000d0e:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8000d12:	6193      	str	r3, [r2, #24]
 8000d14:	2301      	movs	r3, #1
 8000d16:	73fb      	strb	r3, [r7, #15]
 8000d18:	e12f      	b.n	8000f7a <MRCC_uddtEnablePeripheral+0x452>
		case MRCC_ADC1:		RCC->APB2ENR |=(1<<9);	ret =UAPI_OK;	break;
 8000d1a:	4b5e      	ldr	r3, [pc, #376]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000d1c:	699b      	ldr	r3, [r3, #24]
 8000d1e:	4a5d      	ldr	r2, [pc, #372]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000d20:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8000d24:	6193      	str	r3, [r2, #24]
 8000d26:	2301      	movs	r3, #1
 8000d28:	73fb      	strb	r3, [r7, #15]
 8000d2a:	e126      	b.n	8000f7a <MRCC_uddtEnablePeripheral+0x452>
		case MRCC_ADC2:		RCC->APB2ENR |=(1<<10);	ret =UAPI_OK;	break;
 8000d2c:	4b59      	ldr	r3, [pc, #356]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000d2e:	699b      	ldr	r3, [r3, #24]
 8000d30:	4a58      	ldr	r2, [pc, #352]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000d32:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8000d36:	6193      	str	r3, [r2, #24]
 8000d38:	2301      	movs	r3, #1
 8000d3a:	73fb      	strb	r3, [r7, #15]
 8000d3c:	e11d      	b.n	8000f7a <MRCC_uddtEnablePeripheral+0x452>
		case MRCC_TIM1:		RCC->APB2ENR |=(1<<11);	ret =UAPI_OK;	break;
 8000d3e:	4b55      	ldr	r3, [pc, #340]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000d40:	699b      	ldr	r3, [r3, #24]
 8000d42:	4a54      	ldr	r2, [pc, #336]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000d44:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 8000d48:	6193      	str	r3, [r2, #24]
 8000d4a:	2301      	movs	r3, #1
 8000d4c:	73fb      	strb	r3, [r7, #15]
 8000d4e:	e114      	b.n	8000f7a <MRCC_uddtEnablePeripheral+0x452>
		case MRCC_SPI1:		RCC->APB2ENR |=(1<<12);	ret =UAPI_OK;	break;
 8000d50:	4b50      	ldr	r3, [pc, #320]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000d52:	699b      	ldr	r3, [r3, #24]
 8000d54:	4a4f      	ldr	r2, [pc, #316]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000d56:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8000d5a:	6193      	str	r3, [r2, #24]
 8000d5c:	2301      	movs	r3, #1
 8000d5e:	73fb      	strb	r3, [r7, #15]
 8000d60:	e10b      	b.n	8000f7a <MRCC_uddtEnablePeripheral+0x452>
		case MRCC_TIM8:		RCC->APB2ENR |=(1<<13);	ret =UAPI_OK;	break;
 8000d62:	4b4c      	ldr	r3, [pc, #304]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000d64:	699b      	ldr	r3, [r3, #24]
 8000d66:	4a4b      	ldr	r2, [pc, #300]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000d68:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8000d6c:	6193      	str	r3, [r2, #24]
 8000d6e:	2301      	movs	r3, #1
 8000d70:	73fb      	strb	r3, [r7, #15]
 8000d72:	e102      	b.n	8000f7a <MRCC_uddtEnablePeripheral+0x452>
		case MRCC_USART1:	RCC->APB2ENR |=(1<<14);	ret =UAPI_OK;	break;
 8000d74:	4b47      	ldr	r3, [pc, #284]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000d76:	699b      	ldr	r3, [r3, #24]
 8000d78:	4a46      	ldr	r2, [pc, #280]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000d7a:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8000d7e:	6193      	str	r3, [r2, #24]
 8000d80:	2301      	movs	r3, #1
 8000d82:	73fb      	strb	r3, [r7, #15]
 8000d84:	e0f9      	b.n	8000f7a <MRCC_uddtEnablePeripheral+0x452>
		case MRCC_ADC3:		RCC->APB2ENR |=(1<<15);	ret =UAPI_OK;	break;
 8000d86:	4b43      	ldr	r3, [pc, #268]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000d88:	699b      	ldr	r3, [r3, #24]
 8000d8a:	4a42      	ldr	r2, [pc, #264]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000d8c:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8000d90:	6193      	str	r3, [r2, #24]
 8000d92:	2301      	movs	r3, #1
 8000d94:	73fb      	strb	r3, [r7, #15]
 8000d96:	e0f0      	b.n	8000f7a <MRCC_uddtEnablePeripheral+0x452>
		case MRCC_TIM9:		RCC->APB2ENR |=(1<<19);	ret =UAPI_OK;	break;
 8000d98:	4b3e      	ldr	r3, [pc, #248]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000d9a:	699b      	ldr	r3, [r3, #24]
 8000d9c:	4a3d      	ldr	r2, [pc, #244]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000d9e:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 8000da2:	6193      	str	r3, [r2, #24]
 8000da4:	2301      	movs	r3, #1
 8000da6:	73fb      	strb	r3, [r7, #15]
 8000da8:	e0e7      	b.n	8000f7a <MRCC_uddtEnablePeripheral+0x452>
		case MRCC_TIM10:	RCC->APB2ENR |=(1<<20);	ret =UAPI_OK;	break;
 8000daa:	4b3a      	ldr	r3, [pc, #232]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000dac:	699b      	ldr	r3, [r3, #24]
 8000dae:	4a39      	ldr	r2, [pc, #228]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000db0:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000db4:	6193      	str	r3, [r2, #24]
 8000db6:	2301      	movs	r3, #1
 8000db8:	73fb      	strb	r3, [r7, #15]
 8000dba:	e0de      	b.n	8000f7a <MRCC_uddtEnablePeripheral+0x452>
		case MRCC_TIM11:	RCC->APB2ENR |=(1<<21);	ret =UAPI_OK;	break;
 8000dbc:	4b35      	ldr	r3, [pc, #212]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000dbe:	699b      	ldr	r3, [r3, #24]
 8000dc0:	4a34      	ldr	r2, [pc, #208]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000dc2:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8000dc6:	6193      	str	r3, [r2, #24]
 8000dc8:	2301      	movs	r3, #1
 8000dca:	73fb      	strb	r3, [r7, #15]
 8000dcc:	e0d5      	b.n	8000f7a <MRCC_uddtEnablePeripheral+0x452>
		case MRCC_TIM2:		RCC->APB1ENR |=(1<<0);	ret =UAPI_OK;	break;
 8000dce:	4b31      	ldr	r3, [pc, #196]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000dd0:	69db      	ldr	r3, [r3, #28]
 8000dd2:	4a30      	ldr	r2, [pc, #192]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000dd4:	f043 0301 	orr.w	r3, r3, #1
 8000dd8:	61d3      	str	r3, [r2, #28]
 8000dda:	2301      	movs	r3, #1
 8000ddc:	73fb      	strb	r3, [r7, #15]
 8000dde:	e0cc      	b.n	8000f7a <MRCC_uddtEnablePeripheral+0x452>
		case MRCC_TIM3:		RCC->APB1ENR |=(1<<1);	ret =UAPI_OK;	break;
 8000de0:	4b2c      	ldr	r3, [pc, #176]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000de2:	69db      	ldr	r3, [r3, #28]
 8000de4:	4a2b      	ldr	r2, [pc, #172]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000de6:	f043 0302 	orr.w	r3, r3, #2
 8000dea:	61d3      	str	r3, [r2, #28]
 8000dec:	2301      	movs	r3, #1
 8000dee:	73fb      	strb	r3, [r7, #15]
 8000df0:	e0c3      	b.n	8000f7a <MRCC_uddtEnablePeripheral+0x452>
		case MRCC_TIM4:		RCC->APB1ENR |=(1<<2);	ret =UAPI_OK;	break;
 8000df2:	4b28      	ldr	r3, [pc, #160]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000df4:	69db      	ldr	r3, [r3, #28]
 8000df6:	4a27      	ldr	r2, [pc, #156]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000df8:	f043 0304 	orr.w	r3, r3, #4
 8000dfc:	61d3      	str	r3, [r2, #28]
 8000dfe:	2301      	movs	r3, #1
 8000e00:	73fb      	strb	r3, [r7, #15]
 8000e02:	e0ba      	b.n	8000f7a <MRCC_uddtEnablePeripheral+0x452>
		case MRCC_TIM5:		RCC->APB1ENR |=(1<<3);	ret =UAPI_OK;	break;
 8000e04:	4b23      	ldr	r3, [pc, #140]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000e06:	69db      	ldr	r3, [r3, #28]
 8000e08:	4a22      	ldr	r2, [pc, #136]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000e0a:	f043 0308 	orr.w	r3, r3, #8
 8000e0e:	61d3      	str	r3, [r2, #28]
 8000e10:	2301      	movs	r3, #1
 8000e12:	73fb      	strb	r3, [r7, #15]
 8000e14:	e0b1      	b.n	8000f7a <MRCC_uddtEnablePeripheral+0x452>
		case MRCC_TIM6:		RCC->APB1ENR |=(1<<4);	ret =UAPI_OK;	break;
 8000e16:	4b1f      	ldr	r3, [pc, #124]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000e18:	69db      	ldr	r3, [r3, #28]
 8000e1a:	4a1e      	ldr	r2, [pc, #120]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000e1c:	f043 0310 	orr.w	r3, r3, #16
 8000e20:	61d3      	str	r3, [r2, #28]
 8000e22:	2301      	movs	r3, #1
 8000e24:	73fb      	strb	r3, [r7, #15]
 8000e26:	e0a8      	b.n	8000f7a <MRCC_uddtEnablePeripheral+0x452>
		case MRCC_TIM7:		RCC->APB1ENR |=(1<<5);	ret =UAPI_OK;	break;
 8000e28:	4b1a      	ldr	r3, [pc, #104]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000e2a:	69db      	ldr	r3, [r3, #28]
 8000e2c:	4a19      	ldr	r2, [pc, #100]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000e2e:	f043 0320 	orr.w	r3, r3, #32
 8000e32:	61d3      	str	r3, [r2, #28]
 8000e34:	2301      	movs	r3, #1
 8000e36:	73fb      	strb	r3, [r7, #15]
 8000e38:	e09f      	b.n	8000f7a <MRCC_uddtEnablePeripheral+0x452>
		case MRCC_TIM12:	RCC->APB1ENR |=(1<<6);	ret =UAPI_OK;	break;
 8000e3a:	4b16      	ldr	r3, [pc, #88]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000e3c:	69db      	ldr	r3, [r3, #28]
 8000e3e:	4a15      	ldr	r2, [pc, #84]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000e40:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000e44:	61d3      	str	r3, [r2, #28]
 8000e46:	2301      	movs	r3, #1
 8000e48:	73fb      	strb	r3, [r7, #15]
 8000e4a:	e096      	b.n	8000f7a <MRCC_uddtEnablePeripheral+0x452>
		case MRCC_TIM13:	RCC->APB1ENR |=(1<<7);	ret =UAPI_OK;	break;
 8000e4c:	4b11      	ldr	r3, [pc, #68]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000e4e:	69db      	ldr	r3, [r3, #28]
 8000e50:	4a10      	ldr	r2, [pc, #64]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000e52:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000e56:	61d3      	str	r3, [r2, #28]
 8000e58:	2301      	movs	r3, #1
 8000e5a:	73fb      	strb	r3, [r7, #15]
 8000e5c:	e08d      	b.n	8000f7a <MRCC_uddtEnablePeripheral+0x452>
		case MRCC_TIM14:	RCC->APB1ENR |=(1<<8);	ret =UAPI_OK;	break;
 8000e5e:	4b0d      	ldr	r3, [pc, #52]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000e60:	69db      	ldr	r3, [r3, #28]
 8000e62:	4a0c      	ldr	r2, [pc, #48]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000e64:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8000e68:	61d3      	str	r3, [r2, #28]
 8000e6a:	2301      	movs	r3, #1
 8000e6c:	73fb      	strb	r3, [r7, #15]
 8000e6e:	e084      	b.n	8000f7a <MRCC_uddtEnablePeripheral+0x452>
		case MRCC_WWDG:		RCC->APB1ENR |=(1<<11);	ret =UAPI_OK;	break;
 8000e70:	4b08      	ldr	r3, [pc, #32]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000e72:	69db      	ldr	r3, [r3, #28]
 8000e74:	4a07      	ldr	r2, [pc, #28]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000e76:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 8000e7a:	61d3      	str	r3, [r2, #28]
 8000e7c:	2301      	movs	r3, #1
 8000e7e:	73fb      	strb	r3, [r7, #15]
 8000e80:	e07b      	b.n	8000f7a <MRCC_uddtEnablePeripheral+0x452>
		case MRCC_SPI2:		RCC->APB1ENR |=(1<<14);	ret =UAPI_OK;	break;
 8000e82:	4b04      	ldr	r3, [pc, #16]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000e84:	69db      	ldr	r3, [r3, #28]
 8000e86:	4a03      	ldr	r2, [pc, #12]	@ (8000e94 <MRCC_uddtEnablePeripheral+0x36c>)
 8000e88:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8000e8c:	61d3      	str	r3, [r2, #28]
 8000e8e:	2301      	movs	r3, #1
 8000e90:	73fb      	strb	r3, [r7, #15]
 8000e92:	e072      	b.n	8000f7a <MRCC_uddtEnablePeripheral+0x452>
 8000e94:	40021000 	.word	0x40021000
		case MRCC_SPI3:		RCC->APB1ENR |=(1<<15);	ret =UAPI_OK;	break;
 8000e98:	4b3b      	ldr	r3, [pc, #236]	@ (8000f88 <MRCC_uddtEnablePeripheral+0x460>)
 8000e9a:	69db      	ldr	r3, [r3, #28]
 8000e9c:	4a3a      	ldr	r2, [pc, #232]	@ (8000f88 <MRCC_uddtEnablePeripheral+0x460>)
 8000e9e:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8000ea2:	61d3      	str	r3, [r2, #28]
 8000ea4:	2301      	movs	r3, #1
 8000ea6:	73fb      	strb	r3, [r7, #15]
 8000ea8:	e067      	b.n	8000f7a <MRCC_uddtEnablePeripheral+0x452>
		case MRCC_USART2:	RCC->APB1ENR |=(1<<17);	ret =UAPI_OK;	break;
 8000eaa:	4b37      	ldr	r3, [pc, #220]	@ (8000f88 <MRCC_uddtEnablePeripheral+0x460>)
 8000eac:	69db      	ldr	r3, [r3, #28]
 8000eae:	4a36      	ldr	r2, [pc, #216]	@ (8000f88 <MRCC_uddtEnablePeripheral+0x460>)
 8000eb0:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8000eb4:	61d3      	str	r3, [r2, #28]
 8000eb6:	2301      	movs	r3, #1
 8000eb8:	73fb      	strb	r3, [r7, #15]
 8000eba:	e05e      	b.n	8000f7a <MRCC_uddtEnablePeripheral+0x452>
		case MRCC_USART3:	RCC->APB1ENR |=(1<<18);	ret =UAPI_OK;	break;
 8000ebc:	4b32      	ldr	r3, [pc, #200]	@ (8000f88 <MRCC_uddtEnablePeripheral+0x460>)
 8000ebe:	69db      	ldr	r3, [r3, #28]
 8000ec0:	4a31      	ldr	r2, [pc, #196]	@ (8000f88 <MRCC_uddtEnablePeripheral+0x460>)
 8000ec2:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8000ec6:	61d3      	str	r3, [r2, #28]
 8000ec8:	2301      	movs	r3, #1
 8000eca:	73fb      	strb	r3, [r7, #15]
 8000ecc:	e055      	b.n	8000f7a <MRCC_uddtEnablePeripheral+0x452>
		case MRCC_USART4:	RCC->APB1ENR |=(1<<19);	ret =UAPI_OK;	break;
 8000ece:	4b2e      	ldr	r3, [pc, #184]	@ (8000f88 <MRCC_uddtEnablePeripheral+0x460>)
 8000ed0:	69db      	ldr	r3, [r3, #28]
 8000ed2:	4a2d      	ldr	r2, [pc, #180]	@ (8000f88 <MRCC_uddtEnablePeripheral+0x460>)
 8000ed4:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 8000ed8:	61d3      	str	r3, [r2, #28]
 8000eda:	2301      	movs	r3, #1
 8000edc:	73fb      	strb	r3, [r7, #15]
 8000ede:	e04c      	b.n	8000f7a <MRCC_uddtEnablePeripheral+0x452>
		case MRCC_USART5:	RCC->APB1ENR |=(1<<20);	ret =UAPI_OK;	break;
 8000ee0:	4b29      	ldr	r3, [pc, #164]	@ (8000f88 <MRCC_uddtEnablePeripheral+0x460>)
 8000ee2:	69db      	ldr	r3, [r3, #28]
 8000ee4:	4a28      	ldr	r2, [pc, #160]	@ (8000f88 <MRCC_uddtEnablePeripheral+0x460>)
 8000ee6:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000eea:	61d3      	str	r3, [r2, #28]
 8000eec:	2301      	movs	r3, #1
 8000eee:	73fb      	strb	r3, [r7, #15]
 8000ef0:	e043      	b.n	8000f7a <MRCC_uddtEnablePeripheral+0x452>
		case MRCC_I2C1:		RCC->APB1ENR |=(1<<21);	ret =UAPI_OK;	break;
 8000ef2:	4b25      	ldr	r3, [pc, #148]	@ (8000f88 <MRCC_uddtEnablePeripheral+0x460>)
 8000ef4:	69db      	ldr	r3, [r3, #28]
 8000ef6:	4a24      	ldr	r2, [pc, #144]	@ (8000f88 <MRCC_uddtEnablePeripheral+0x460>)
 8000ef8:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8000efc:	61d3      	str	r3, [r2, #28]
 8000efe:	2301      	movs	r3, #1
 8000f00:	73fb      	strb	r3, [r7, #15]
 8000f02:	e03a      	b.n	8000f7a <MRCC_uddtEnablePeripheral+0x452>
		case MRCC_I2C2:		RCC->APB1ENR |=(1<<22);	ret =UAPI_OK;	break;
 8000f04:	4b20      	ldr	r3, [pc, #128]	@ (8000f88 <MRCC_uddtEnablePeripheral+0x460>)
 8000f06:	69db      	ldr	r3, [r3, #28]
 8000f08:	4a1f      	ldr	r2, [pc, #124]	@ (8000f88 <MRCC_uddtEnablePeripheral+0x460>)
 8000f0a:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8000f0e:	61d3      	str	r3, [r2, #28]
 8000f10:	2301      	movs	r3, #1
 8000f12:	73fb      	strb	r3, [r7, #15]
 8000f14:	e031      	b.n	8000f7a <MRCC_uddtEnablePeripheral+0x452>
		case MRCC_USB:		RCC->APB1ENR |=(1<<23);	ret =UAPI_OK;	break;
 8000f16:	4b1c      	ldr	r3, [pc, #112]	@ (8000f88 <MRCC_uddtEnablePeripheral+0x460>)
 8000f18:	69db      	ldr	r3, [r3, #28]
 8000f1a:	4a1b      	ldr	r2, [pc, #108]	@ (8000f88 <MRCC_uddtEnablePeripheral+0x460>)
 8000f1c:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8000f20:	61d3      	str	r3, [r2, #28]
 8000f22:	2301      	movs	r3, #1
 8000f24:	73fb      	strb	r3, [r7, #15]
 8000f26:	e028      	b.n	8000f7a <MRCC_uddtEnablePeripheral+0x452>
		case MRCC_CAN:		RCC->APB1ENR |=(1<<25);	ret =UAPI_OK;	break;
 8000f28:	4b17      	ldr	r3, [pc, #92]	@ (8000f88 <MRCC_uddtEnablePeripheral+0x460>)
 8000f2a:	69db      	ldr	r3, [r3, #28]
 8000f2c:	4a16      	ldr	r2, [pc, #88]	@ (8000f88 <MRCC_uddtEnablePeripheral+0x460>)
 8000f2e:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8000f32:	61d3      	str	r3, [r2, #28]
 8000f34:	2301      	movs	r3, #1
 8000f36:	73fb      	strb	r3, [r7, #15]
 8000f38:	e01f      	b.n	8000f7a <MRCC_uddtEnablePeripheral+0x452>
		case MRCC_BKP:		RCC->APB1ENR |=(1<<27);	ret =UAPI_OK;	break;
 8000f3a:	4b13      	ldr	r3, [pc, #76]	@ (8000f88 <MRCC_uddtEnablePeripheral+0x460>)
 8000f3c:	69db      	ldr	r3, [r3, #28]
 8000f3e:	4a12      	ldr	r2, [pc, #72]	@ (8000f88 <MRCC_uddtEnablePeripheral+0x460>)
 8000f40:	f043 6300 	orr.w	r3, r3, #134217728	@ 0x8000000
 8000f44:	61d3      	str	r3, [r2, #28]
 8000f46:	2301      	movs	r3, #1
 8000f48:	73fb      	strb	r3, [r7, #15]
 8000f4a:	e016      	b.n	8000f7a <MRCC_uddtEnablePeripheral+0x452>
		case MRCC_PWR:		RCC->APB1ENR |=(1<<28);	ret =UAPI_OK;	break;
 8000f4c:	4b0e      	ldr	r3, [pc, #56]	@ (8000f88 <MRCC_uddtEnablePeripheral+0x460>)
 8000f4e:	69db      	ldr	r3, [r3, #28]
 8000f50:	4a0d      	ldr	r2, [pc, #52]	@ (8000f88 <MRCC_uddtEnablePeripheral+0x460>)
 8000f52:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8000f56:	61d3      	str	r3, [r2, #28]
 8000f58:	2301      	movs	r3, #1
 8000f5a:	73fb      	strb	r3, [r7, #15]
 8000f5c:	e00d      	b.n	8000f7a <MRCC_uddtEnablePeripheral+0x452>
		case MRCC_DAC:		RCC->APB1ENR |=(1<<29);	ret =UAPI_OK;	break;
 8000f5e:	4b0a      	ldr	r3, [pc, #40]	@ (8000f88 <MRCC_uddtEnablePeripheral+0x460>)
 8000f60:	69db      	ldr	r3, [r3, #28]
 8000f62:	4a09      	ldr	r2, [pc, #36]	@ (8000f88 <MRCC_uddtEnablePeripheral+0x460>)
 8000f64:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 8000f68:	61d3      	str	r3, [r2, #28]
 8000f6a:	2301      	movs	r3, #1
 8000f6c:	73fb      	strb	r3, [r7, #15]
 8000f6e:	e004      	b.n	8000f7a <MRCC_uddtEnablePeripheral+0x452>
		default: 			ret =UAPI_INVALID_PARM; break;
 8000f70:	2304      	movs	r3, #4
 8000f72:	73fb      	strb	r3, [r7, #15]
 8000f74:	e001      	b.n	8000f7a <MRCC_uddtEnablePeripheral+0x452>
		}
	}
	else
	{
		ret = UAPI_INVALID_PARM;
 8000f76:	2304      	movs	r3, #4
 8000f78:	73fb      	strb	r3, [r7, #15]
	}
	return ret;
 8000f7a:	7bfb      	ldrb	r3, [r7, #15]
}
 8000f7c:	4618      	mov	r0, r3
 8000f7e:	3714      	adds	r7, #20
 8000f80:	46bd      	mov	sp, r7
 8000f82:	bc80      	pop	{r7}
 8000f84:	4770      	bx	lr
 8000f86:	bf00      	nop
 8000f88:	40021000 	.word	0x40021000

08000f8c <EXTI9_CALLBACK>:


uint8 IRQFlag = 0;

void EXTI9_CALLBACK(void)
{
 8000f8c:	b480      	push	{r7}
 8000f8e:	af00      	add	r7, sp, #0
	IRQFlag = 1;
 8000f90:	4b03      	ldr	r3, [pc, #12]	@ (8000fa0 <EXTI9_CALLBACK+0x14>)
 8000f92:	2201      	movs	r2, #1
 8000f94:	701a      	strb	r2, [r3, #0]
}
 8000f96:	bf00      	nop
 8000f98:	46bd      	mov	sp, r7
 8000f9a:	bc80      	pop	{r7}
 8000f9c:	4770      	bx	lr
 8000f9e:	bf00      	nop
 8000fa0:	20000058 	.word	0x20000058

08000fa4 <main>:

int main(void)
{
 8000fa4:	b580      	push	{r7, lr}
 8000fa6:	b088      	sub	sp, #32
 8000fa8:	af00      	add	r7, sp, #0
	// Clock Init
	MRCC_uddtInitClk(MRCC_HSI, MRCC_APB_PRESCALER_0, MRCC_APB_PRESCALER_0, MRCC_AHB_PRESCALER_0);
 8000faa:	2300      	movs	r3, #0
 8000fac:	2200      	movs	r2, #0
 8000fae:	2100      	movs	r1, #0
 8000fb0:	2000      	movs	r0, #0
 8000fb2:	f7ff fd0d 	bl	80009d0 <MRCC_uddtInitClk>
	MRCC_uddtEnablePeripheral(MRCC_AFIO);
 8000fb6:	2007      	movs	r0, #7
 8000fb8:	f7ff fdb6 	bl	8000b28 <MRCC_uddtEnablePeripheral>
	MRCC_uddtEnablePeripheral(MRCC_IOPB);
 8000fbc:	2009      	movs	r0, #9
 8000fbe:	f7ff fdb3 	bl	8000b28 <MRCC_uddtEnablePeripheral>
	//MNVIC_uddtSetIRQGroup(MNVIC_GP_04_SP_04);
	//MNVIC_uddtSetIRQPriority(MNVIC_USART1_IRQ , MNVIC_GP_04_SP_04 , 1,1);

	MEXTI_uddtCfg_t ExtiP9B;

	ExtiP9B.uddtTriggerControl = MEXTI_TRIGGER_RISING;
 8000fc2:	2301      	movs	r3, #1
 8000fc4:	763b      	strb	r3, [r7, #24]
	ExtiP9B.IRQCallback = EXTI9_CALLBACK;
 8000fc6:	4b0b      	ldr	r3, [pc, #44]	@ (8000ff4 <main+0x50>)
 8000fc8:	61fb      	str	r3, [r7, #28]
	ExtiP9B.u8IRQStatus = MEXTI_UNMASKED;
 8000fca:	2301      	movs	r3, #1
 8000fcc:	767b      	strb	r3, [r7, #25]
	ExtiP9B.uddtPinData = EXTI9PB9;
 8000fce:	4a0a      	ldr	r2, [pc, #40]	@ (8000ff8 <main+0x54>)
 8000fd0:	f107 030c 	add.w	r3, r7, #12
 8000fd4:	ca07      	ldmia	r2, {r0, r1, r2}
 8000fd6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
	MEXTI_uddtInit(&ExtiP9B);
 8000fda:	f107 030c 	add.w	r3, r7, #12
 8000fde:	4618      	mov	r0, r3
 8000fe0:	f7ff f9b4 	bl	800034c <MEXTI_uddtInit>


	while(1)
	{
		if(IRQFlag)
 8000fe4:	4b05      	ldr	r3, [pc, #20]	@ (8000ffc <main+0x58>)
 8000fe6:	781b      	ldrb	r3, [r3, #0]
 8000fe8:	2b00      	cmp	r3, #0
 8000fea:	d0fb      	beq.n	8000fe4 <main+0x40>
			IRQFlag = 1;
 8000fec:	4b03      	ldr	r3, [pc, #12]	@ (8000ffc <main+0x58>)
 8000fee:	2201      	movs	r2, #1
 8000ff0:	701a      	strb	r2, [r3, #0]
		if(IRQFlag)
 8000ff2:	e7f7      	b.n	8000fe4 <main+0x40>
 8000ff4:	08000f8d 	.word	0x08000f8d
 8000ff8:	080010b4 	.word	0x080010b4
 8000ffc:	20000058 	.word	0x20000058

08001000 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8001000:	480d      	ldr	r0, [pc, #52]	@ (8001038 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8001002:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8001004:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8001008:	480c      	ldr	r0, [pc, #48]	@ (800103c <LoopForever+0x6>)
  ldr r1, =_edata
 800100a:	490d      	ldr	r1, [pc, #52]	@ (8001040 <LoopForever+0xa>)
  ldr r2, =_sidata
 800100c:	4a0d      	ldr	r2, [pc, #52]	@ (8001044 <LoopForever+0xe>)
  movs r3, #0
 800100e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8001010:	e002      	b.n	8001018 <LoopCopyDataInit>

08001012 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8001012:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8001014:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8001016:	3304      	adds	r3, #4

08001018 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8001018:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800101a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800101c:	d3f9      	bcc.n	8001012 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800101e:	4a0a      	ldr	r2, [pc, #40]	@ (8001048 <LoopForever+0x12>)
  ldr r4, =_ebss
 8001020:	4c0a      	ldr	r4, [pc, #40]	@ (800104c <LoopForever+0x16>)
  movs r3, #0
 8001022:	2300      	movs	r3, #0
  b LoopFillZerobss
 8001024:	e001      	b.n	800102a <LoopFillZerobss>

08001026 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8001026:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8001028:	3204      	adds	r2, #4

0800102a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800102a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800102c:	d3fb      	bcc.n	8001026 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800102e:	f000 f811 	bl	8001054 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8001032:	f7ff ffb7 	bl	8000fa4 <main>

08001036 <LoopForever>:

LoopForever:
  b LoopForever
 8001036:	e7fe      	b.n	8001036 <LoopForever>
  ldr   r0, =_estack
 8001038:	20005000 	.word	0x20005000
  ldr r0, =_sdata
 800103c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8001040:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8001044:	080010c8 	.word	0x080010c8
  ldr r2, =_sbss
 8001048:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800104c:	2000005c 	.word	0x2000005c

08001050 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8001050:	e7fe      	b.n	8001050 <ADC1_2_IRQHandler>
	...

08001054 <__libc_init_array>:
 8001054:	b570      	push	{r4, r5, r6, lr}
 8001056:	2600      	movs	r6, #0
 8001058:	4d0c      	ldr	r5, [pc, #48]	@ (800108c <__libc_init_array+0x38>)
 800105a:	4c0d      	ldr	r4, [pc, #52]	@ (8001090 <__libc_init_array+0x3c>)
 800105c:	1b64      	subs	r4, r4, r5
 800105e:	10a4      	asrs	r4, r4, #2
 8001060:	42a6      	cmp	r6, r4
 8001062:	d109      	bne.n	8001078 <__libc_init_array+0x24>
 8001064:	f000 f81a 	bl	800109c <_init>
 8001068:	2600      	movs	r6, #0
 800106a:	4d0a      	ldr	r5, [pc, #40]	@ (8001094 <__libc_init_array+0x40>)
 800106c:	4c0a      	ldr	r4, [pc, #40]	@ (8001098 <__libc_init_array+0x44>)
 800106e:	1b64      	subs	r4, r4, r5
 8001070:	10a4      	asrs	r4, r4, #2
 8001072:	42a6      	cmp	r6, r4
 8001074:	d105      	bne.n	8001082 <__libc_init_array+0x2e>
 8001076:	bd70      	pop	{r4, r5, r6, pc}
 8001078:	f855 3b04 	ldr.w	r3, [r5], #4
 800107c:	4798      	blx	r3
 800107e:	3601      	adds	r6, #1
 8001080:	e7ee      	b.n	8001060 <__libc_init_array+0xc>
 8001082:	f855 3b04 	ldr.w	r3, [r5], #4
 8001086:	4798      	blx	r3
 8001088:	3601      	adds	r6, #1
 800108a:	e7f2      	b.n	8001072 <__libc_init_array+0x1e>
 800108c:	080010c0 	.word	0x080010c0
 8001090:	080010c0 	.word	0x080010c0
 8001094:	080010c0 	.word	0x080010c0
 8001098:	080010c4 	.word	0x080010c4

0800109c <_init>:
 800109c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800109e:	bf00      	nop
 80010a0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80010a2:	bc08      	pop	{r3}
 80010a4:	469e      	mov	lr, r3
 80010a6:	4770      	bx	lr

080010a8 <_fini>:
 80010a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80010aa:	bf00      	nop
 80010ac:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80010ae:	bc08      	pop	{r3}
 80010b0:	469e      	mov	lr, r3
 80010b2:	4770      	bx	lr
