
01_TogLed_U7L1A2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000024c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000002a0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000002a0  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000002d0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  0000030c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000094e  00000000  00000000  00000334  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000058b  00000000  00000000  00000c82  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003ce  00000000  00000000  0000120d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  000015dc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000370  00000000  00000000  00001610  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000438  00000000  00000000  00001980  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  00001db8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 4c 00 	call	0x98	; 0x98 <main>
  64:	0c 94 24 01 	jmp	0x248	; 0x248 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <vGpioInit>:
}

void vGpioInit(void)
{
	// select pin 5,6,7 as output for led
	SET_BIT(GPIO_DDRD , 7);
  6c:	81 b3       	in	r24, 0x11	; 17
  6e:	80 68       	ori	r24, 0x80	; 128
  70:	81 bb       	out	0x11, r24	; 17
	SET_BIT(GPIO_DDRD , 6);
  72:	81 b3       	in	r24, 0x11	; 17
  74:	80 64       	ori	r24, 0x40	; 64
  76:	81 bb       	out	0x11, r24	; 17
	SET_BIT(GPIO_DDRD , 5);
  78:	81 b3       	in	r24, 0x11	; 17
  7a:	80 62       	ori	r24, 0x20	; 32
  7c:	81 bb       	out	0x11, r24	; 17
	// select pin 4 as output for buzzer
	SET_BIT(GPIO_DDRD , 4);
  7e:	81 b3       	in	r24, 0x11	; 17
  80:	80 61       	ori	r24, 0x10	; 16
  82:	81 bb       	out	0x11, r24	; 17
	// select pin 0,1,2 as input for push buttons
	CLR_BIT(GPIO_DDRD , 2);
  84:	81 b3       	in	r24, 0x11	; 17
  86:	8b 7f       	andi	r24, 0xFB	; 251
  88:	81 bb       	out	0x11, r24	; 17
	CLR_BIT(GPIO_DDRD , 1);
  8a:	81 b3       	in	r24, 0x11	; 17
  8c:	8d 7f       	andi	r24, 0xFD	; 253
  8e:	81 bb       	out	0x11, r24	; 17
	CLR_BIT(GPIO_DDRD , 0);
  90:	81 b3       	in	r24, 0x11	; 17
  92:	8e 7f       	andi	r24, 0xFE	; 254
  94:	81 bb       	out	0x11, r24	; 17
  96:	08 95       	ret

00000098 <main>:

void vGpioInit(void);

int main(void)
{
	vGpioInit();
  98:	0e 94 36 00 	call	0x6c	; 0x6c <vGpioInit>
	while (1)
	{
		if(GET_BIT(GPIO_PIND , 0) == BTN_PRESSED)
  9c:	80 9b       	sbis	0x10, 0	; 16
  9e:	11 c0       	rjmp	.+34     	; 0xc2 <main+0x2a>
		{
			SET_BIT(GPIO_PORTD , 4);
  a0:	82 b3       	in	r24, 0x12	; 18
  a2:	80 61       	ori	r24, 0x10	; 16
  a4:	82 bb       	out	0x12, r24	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  a6:	2f ef       	ldi	r18, 0xFF	; 255
  a8:	84 e3       	ldi	r24, 0x34	; 52
  aa:	9c e0       	ldi	r25, 0x0C	; 12
  ac:	21 50       	subi	r18, 0x01	; 1
  ae:	80 40       	sbci	r24, 0x00	; 0
  b0:	90 40       	sbci	r25, 0x00	; 0
  b2:	e1 f7       	brne	.-8      	; 0xac <main+0x14>
  b4:	00 c0       	rjmp	.+0      	; 0xb6 <main+0x1e>
  b6:	00 00       	nop
			_delay_ms(500);
			CLR_BIT(GPIO_PORTD , 4);
  b8:	82 b3       	in	r24, 0x12	; 18
  ba:	8f 7e       	andi	r24, 0xEF	; 239
  bc:	82 bb       	out	0x12, r24	; 18
			while(GET_BIT(GPIO_PIND , 0) == BTN_PRESSED);
  be:	80 99       	sbic	0x10, 0	; 16
  c0:	fe cf       	rjmp	.-4      	; 0xbe <main+0x26>
		}
		
		if(GET_BIT(GPIO_PIND , 1) == BTN_PRESSED)
  c2:	81 9b       	sbis	0x10, 1	; 16
  c4:	5f c0       	rjmp	.+190    	; 0x184 <main+0xec>
		{
			SET_BIT(GPIO_PORTD , 5);
  c6:	82 b3       	in	r24, 0x12	; 18
  c8:	80 62       	ori	r24, 0x20	; 32
  ca:	82 bb       	out	0x12, r24	; 18
  cc:	2f ef       	ldi	r18, 0xFF	; 255
  ce:	84 e3       	ldi	r24, 0x34	; 52
  d0:	9c e0       	ldi	r25, 0x0C	; 12
  d2:	21 50       	subi	r18, 0x01	; 1
  d4:	80 40       	sbci	r24, 0x00	; 0
  d6:	90 40       	sbci	r25, 0x00	; 0
  d8:	e1 f7       	brne	.-8      	; 0xd2 <main+0x3a>
  da:	00 c0       	rjmp	.+0      	; 0xdc <main+0x44>
  dc:	00 00       	nop
			_delay_ms(500);
			SET_BIT(GPIO_PORTD , 6);
  de:	82 b3       	in	r24, 0x12	; 18
  e0:	80 64       	ori	r24, 0x40	; 64
  e2:	82 bb       	out	0x12, r24	; 18
  e4:	2f ef       	ldi	r18, 0xFF	; 255
  e6:	84 e3       	ldi	r24, 0x34	; 52
  e8:	9c e0       	ldi	r25, 0x0C	; 12
  ea:	21 50       	subi	r18, 0x01	; 1
  ec:	80 40       	sbci	r24, 0x00	; 0
  ee:	90 40       	sbci	r25, 0x00	; 0
  f0:	e1 f7       	brne	.-8      	; 0xea <main+0x52>
  f2:	00 c0       	rjmp	.+0      	; 0xf4 <main+0x5c>
  f4:	00 00       	nop
			_delay_ms(500);
			SET_BIT(GPIO_PORTD , 7);
  f6:	82 b3       	in	r24, 0x12	; 18
  f8:	80 68       	ori	r24, 0x80	; 128
  fa:	82 bb       	out	0x12, r24	; 18
  fc:	2f ef       	ldi	r18, 0xFF	; 255
  fe:	84 e3       	ldi	r24, 0x34	; 52
 100:	9c e0       	ldi	r25, 0x0C	; 12
 102:	21 50       	subi	r18, 0x01	; 1
 104:	80 40       	sbci	r24, 0x00	; 0
 106:	90 40       	sbci	r25, 0x00	; 0
 108:	e1 f7       	brne	.-8      	; 0x102 <main+0x6a>
 10a:	00 c0       	rjmp	.+0      	; 0x10c <main+0x74>
 10c:	00 00       	nop
			_delay_ms(500);
			SET_BIT(GPIO_PORTD , 4);
 10e:	82 b3       	in	r24, 0x12	; 18
 110:	80 61       	ori	r24, 0x10	; 16
 112:	82 bb       	out	0x12, r24	; 18
 114:	2f e7       	ldi	r18, 0x7F	; 127
 116:	8a e1       	ldi	r24, 0x1A	; 26
 118:	96 e0       	ldi	r25, 0x06	; 6
 11a:	21 50       	subi	r18, 0x01	; 1
 11c:	80 40       	sbci	r24, 0x00	; 0
 11e:	90 40       	sbci	r25, 0x00	; 0
 120:	e1 f7       	brne	.-8      	; 0x11a <main+0x82>
 122:	00 c0       	rjmp	.+0      	; 0x124 <main+0x8c>
 124:	00 00       	nop
			_delay_ms(250);
			CLR_BIT(GPIO_PORTD , 4);
 126:	82 b3       	in	r24, 0x12	; 18
 128:	8f 7e       	andi	r24, 0xEF	; 239
 12a:	82 bb       	out	0x12, r24	; 18
			CLR_BIT(GPIO_PORTD , 7);
 12c:	82 b3       	in	r24, 0x12	; 18
 12e:	8f 77       	andi	r24, 0x7F	; 127
 130:	82 bb       	out	0x12, r24	; 18
 132:	2f ef       	ldi	r18, 0xFF	; 255
 134:	84 e3       	ldi	r24, 0x34	; 52
 136:	9c e0       	ldi	r25, 0x0C	; 12
 138:	21 50       	subi	r18, 0x01	; 1
 13a:	80 40       	sbci	r24, 0x00	; 0
 13c:	90 40       	sbci	r25, 0x00	; 0
 13e:	e1 f7       	brne	.-8      	; 0x138 <main+0xa0>
 140:	00 c0       	rjmp	.+0      	; 0x142 <main+0xaa>
 142:	00 00       	nop
			_delay_ms(500);
			CLR_BIT(GPIO_PORTD , 6);
 144:	82 b3       	in	r24, 0x12	; 18
 146:	8f 7b       	andi	r24, 0xBF	; 191
 148:	82 bb       	out	0x12, r24	; 18
 14a:	2f ef       	ldi	r18, 0xFF	; 255
 14c:	84 e3       	ldi	r24, 0x34	; 52
 14e:	9c e0       	ldi	r25, 0x0C	; 12
 150:	21 50       	subi	r18, 0x01	; 1
 152:	80 40       	sbci	r24, 0x00	; 0
 154:	90 40       	sbci	r25, 0x00	; 0
 156:	e1 f7       	brne	.-8      	; 0x150 <main+0xb8>
 158:	00 c0       	rjmp	.+0      	; 0x15a <main+0xc2>
 15a:	00 00       	nop
			_delay_ms(500);
			CLR_BIT(GPIO_PORTD , 5);
 15c:	82 b3       	in	r24, 0x12	; 18
 15e:	8f 7d       	andi	r24, 0xDF	; 223
 160:	82 bb       	out	0x12, r24	; 18
			SET_BIT(GPIO_PORTD , 4);
 162:	82 b3       	in	r24, 0x12	; 18
 164:	80 61       	ori	r24, 0x10	; 16
 166:	82 bb       	out	0x12, r24	; 18
 168:	2f e7       	ldi	r18, 0x7F	; 127
 16a:	8a e1       	ldi	r24, 0x1A	; 26
 16c:	96 e0       	ldi	r25, 0x06	; 6
 16e:	21 50       	subi	r18, 0x01	; 1
 170:	80 40       	sbci	r24, 0x00	; 0
 172:	90 40       	sbci	r25, 0x00	; 0
 174:	e1 f7       	brne	.-8      	; 0x16e <main+0xd6>
 176:	00 c0       	rjmp	.+0      	; 0x178 <main+0xe0>
 178:	00 00       	nop
			_delay_ms(250);
			CLR_BIT(GPIO_PORTD , 4);
 17a:	82 b3       	in	r24, 0x12	; 18
 17c:	8f 7e       	andi	r24, 0xEF	; 239
 17e:	82 bb       	out	0x12, r24	; 18
			while(GET_BIT(GPIO_PIND , 1) == BTN_PRESSED);
 180:	81 99       	sbic	0x10, 1	; 16
 182:	fe cf       	rjmp	.-4      	; 0x180 <main+0xe8>
		}
		
		if(GET_BIT(GPIO_PIND , 2) == BTN_PRESSED)
 184:	82 9b       	sbis	0x10, 2	; 16
 186:	8a cf       	rjmp	.-236    	; 0x9c <main+0x4>
		{
			SET_BIT(GPIO_PORTD , 7);
 188:	82 b3       	in	r24, 0x12	; 18
 18a:	80 68       	ori	r24, 0x80	; 128
 18c:	82 bb       	out	0x12, r24	; 18
 18e:	2f ef       	ldi	r18, 0xFF	; 255
 190:	84 e3       	ldi	r24, 0x34	; 52
 192:	9c e0       	ldi	r25, 0x0C	; 12
 194:	21 50       	subi	r18, 0x01	; 1
 196:	80 40       	sbci	r24, 0x00	; 0
 198:	90 40       	sbci	r25, 0x00	; 0
 19a:	e1 f7       	brne	.-8      	; 0x194 <main+0xfc>
 19c:	00 c0       	rjmp	.+0      	; 0x19e <main+0x106>
 19e:	00 00       	nop
			_delay_ms(500);
			SET_BIT(GPIO_PORTD , 6);
 1a0:	82 b3       	in	r24, 0x12	; 18
 1a2:	80 64       	ori	r24, 0x40	; 64
 1a4:	82 bb       	out	0x12, r24	; 18
 1a6:	2f ef       	ldi	r18, 0xFF	; 255
 1a8:	84 e3       	ldi	r24, 0x34	; 52
 1aa:	9c e0       	ldi	r25, 0x0C	; 12
 1ac:	21 50       	subi	r18, 0x01	; 1
 1ae:	80 40       	sbci	r24, 0x00	; 0
 1b0:	90 40       	sbci	r25, 0x00	; 0
 1b2:	e1 f7       	brne	.-8      	; 0x1ac <main+0x114>
 1b4:	00 c0       	rjmp	.+0      	; 0x1b6 <main+0x11e>
 1b6:	00 00       	nop
			_delay_ms(500);
			SET_BIT(GPIO_PORTD , 5);
 1b8:	82 b3       	in	r24, 0x12	; 18
 1ba:	80 62       	ori	r24, 0x20	; 32
 1bc:	82 bb       	out	0x12, r24	; 18
 1be:	2f ef       	ldi	r18, 0xFF	; 255
 1c0:	84 e3       	ldi	r24, 0x34	; 52
 1c2:	9c e0       	ldi	r25, 0x0C	; 12
 1c4:	21 50       	subi	r18, 0x01	; 1
 1c6:	80 40       	sbci	r24, 0x00	; 0
 1c8:	90 40       	sbci	r25, 0x00	; 0
 1ca:	e1 f7       	brne	.-8      	; 0x1c4 <main+0x12c>
 1cc:	00 c0       	rjmp	.+0      	; 0x1ce <main+0x136>
 1ce:	00 00       	nop
			_delay_ms(500);
			SET_BIT(GPIO_PORTD , 4);
 1d0:	82 b3       	in	r24, 0x12	; 18
 1d2:	80 61       	ori	r24, 0x10	; 16
 1d4:	82 bb       	out	0x12, r24	; 18
 1d6:	2f e7       	ldi	r18, 0x7F	; 127
 1d8:	8a e1       	ldi	r24, 0x1A	; 26
 1da:	96 e0       	ldi	r25, 0x06	; 6
 1dc:	21 50       	subi	r18, 0x01	; 1
 1de:	80 40       	sbci	r24, 0x00	; 0
 1e0:	90 40       	sbci	r25, 0x00	; 0
 1e2:	e1 f7       	brne	.-8      	; 0x1dc <main+0x144>
 1e4:	00 c0       	rjmp	.+0      	; 0x1e6 <main+0x14e>
 1e6:	00 00       	nop
			_delay_ms(250);
			CLR_BIT(GPIO_PORTD , 4);
 1e8:	82 b3       	in	r24, 0x12	; 18
 1ea:	8f 7e       	andi	r24, 0xEF	; 239
 1ec:	82 bb       	out	0x12, r24	; 18
			CLR_BIT(GPIO_PORTD , 5);
 1ee:	82 b3       	in	r24, 0x12	; 18
 1f0:	8f 7d       	andi	r24, 0xDF	; 223
 1f2:	82 bb       	out	0x12, r24	; 18
 1f4:	2f ef       	ldi	r18, 0xFF	; 255
 1f6:	84 e3       	ldi	r24, 0x34	; 52
 1f8:	9c e0       	ldi	r25, 0x0C	; 12
 1fa:	21 50       	subi	r18, 0x01	; 1
 1fc:	80 40       	sbci	r24, 0x00	; 0
 1fe:	90 40       	sbci	r25, 0x00	; 0
 200:	e1 f7       	brne	.-8      	; 0x1fa <main+0x162>
 202:	00 c0       	rjmp	.+0      	; 0x204 <main+0x16c>
 204:	00 00       	nop
			_delay_ms(500);
			CLR_BIT(GPIO_PORTD , 6);
 206:	82 b3       	in	r24, 0x12	; 18
 208:	8f 7b       	andi	r24, 0xBF	; 191
 20a:	82 bb       	out	0x12, r24	; 18
 20c:	2f ef       	ldi	r18, 0xFF	; 255
 20e:	84 e3       	ldi	r24, 0x34	; 52
 210:	9c e0       	ldi	r25, 0x0C	; 12
 212:	21 50       	subi	r18, 0x01	; 1
 214:	80 40       	sbci	r24, 0x00	; 0
 216:	90 40       	sbci	r25, 0x00	; 0
 218:	e1 f7       	brne	.-8      	; 0x212 <main+0x17a>
 21a:	00 c0       	rjmp	.+0      	; 0x21c <main+0x184>
 21c:	00 00       	nop
			_delay_ms(500);
			CLR_BIT(GPIO_PORTD , 7);
 21e:	82 b3       	in	r24, 0x12	; 18
 220:	8f 77       	andi	r24, 0x7F	; 127
 222:	82 bb       	out	0x12, r24	; 18
			SET_BIT(GPIO_PORTD , 4);
 224:	82 b3       	in	r24, 0x12	; 18
 226:	80 61       	ori	r24, 0x10	; 16
 228:	82 bb       	out	0x12, r24	; 18
 22a:	2f e7       	ldi	r18, 0x7F	; 127
 22c:	8a e1       	ldi	r24, 0x1A	; 26
 22e:	96 e0       	ldi	r25, 0x06	; 6
 230:	21 50       	subi	r18, 0x01	; 1
 232:	80 40       	sbci	r24, 0x00	; 0
 234:	90 40       	sbci	r25, 0x00	; 0
 236:	e1 f7       	brne	.-8      	; 0x230 <main+0x198>
 238:	00 c0       	rjmp	.+0      	; 0x23a <main+0x1a2>
 23a:	00 00       	nop
			_delay_ms(250);
			CLR_BIT(GPIO_PORTD , 4);
 23c:	82 b3       	in	r24, 0x12	; 18
 23e:	8f 7e       	andi	r24, 0xEF	; 239
 240:	82 bb       	out	0x12, r24	; 18
			while(GET_BIT(GPIO_PIND , 2) == BTN_PRESSED);
 242:	82 99       	sbic	0x10, 2	; 16
 244:	fe cf       	rjmp	.-4      	; 0x242 <main+0x1aa>
 246:	2a cf       	rjmp	.-428    	; 0x9c <main+0x4>

00000248 <_exit>:
 248:	f8 94       	cli

0000024a <__stop_program>:
 24a:	ff cf       	rjmp	.-2      	; 0x24a <__stop_program>
